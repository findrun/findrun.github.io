[{"title":"CSS基础样式实现","url":"/2019/12/18/CSS基础样式实现/","content":"## CSS3自适应布局\n视口单位(Viewport units)\n\n什么是视口？ \n\n在PC端，视口指的是在PC端，指的是浏览器的可视区域；\n\n而在移动端，它涉及3个视口：Layout Viewport（布局视口），Visual Viewport（视觉视口），Ideal Viewport（理想视口）。\n\n视口单位中的“视口”，PC端指的是浏览器的可视区域；移动端指的就是Viewport中的Layout Viewport。\n\n 根据CSS3规范，视口单位主要包括以下4个：\n\n      1.vw：1vw等于视口宽度的1%。\n\n      2.vh：1vh等于视口高度的1%。\n\n      3.vmin：选取vw和vh中最小的那个。\n\n      4.vmax：选取vw和vh中最大的那个。\n\n vh and vw：相对于视口的高度和宽度，而不是父元素的（CSS百分比是相对于包含它的最近的父元素的高度和宽度）。1vh 等于1/100的视口高度，1vw 等于1/100的视口宽度。\n\n比如：浏览器高度950px，宽度为1920px, 1 vh = 950px/100 = 9.5 px，1vw = 1920px/100 =19.2 px。\n\nvmax相对于视口的宽度或高度中较大的那个。其中最大的那个被均分为100单位的vmax。\n\nvmin相对于视口的宽度或高度中较小的那个。其中最小的那个被均分为100单位的vmin。\n\n## 实现圆角边框\n圆角边框（border-radius）的基本用法：\n\n```\n圆角边框的最基本用法就是设置四个相同弧度的圆角\n\nboder-top-left-radius：30px；      //左上角\n\nboder-top-right-radius：30px；   //右上角\n\nboder-bottom-left-radius：30px；  //右下角\n\nboder-bottom-right-radius：30px； //左下角\n\n如果这四个弧度的圆角相同，可以写成：\n\nborder-radius：30px；\n\n例子：\n\ncss部分：\n\n.div1{\n\n            margin:0 auto;\n\n            background: darkcyan;\n\n            width:200px;\n\n            height:200px;\n\n            border:2px solid darkslategray;\n\n            border-radius:30px;\n\n            text-align: center;\n\n            line-height: 200px;\n\n        }\n\nhtml部分：\n\n <div class=\"div1\">圆角边框</div>\n```\n\n```\n圆角边框也可以使用百分比作为单位，比如：将一个正方形的圆角边框设置为50%，那么就会形成一个圆，不过使用百分比与像素并不能等效。\n\n注意：百分比大于50%后，形状就不会再变化了，圆角的半径不能超过宽/高的一半\n\n例子：\n\ncss部分：\n\n.box1{\n\nwidth:200px;\n\nheight:200px;\n\nmargin: 30px auto;\n\nborder: 2px solid #e4007e;\n\ntext-align: center;\n\nline-height: 200px;\n\nfont-weight: bold;\n\nfont-size: 24px;\n\nbackground: burlywood;\n\nborder-radius: 50%;//圆角百分比\n\n}\n\nhtml部分：\n\n<div class=\"box1\">这是一个圆</div>\n```","tags":["css"]},{"title":"Java学习路线-JavaSE-阶段一","url":"/2019/12/12/Java学习路线-JavaSE-阶段一/","content":"## 认识java\n\n## java的发展史及用户\n\n## 配置Java环境\n\n### JDK下载安装\n\n### 配置环境变量","tags":["java"]},{"title":"JDK8新特性","url":"/2019/11/01/JDK8新特性/","content":"主要介绍新特性中的Lambda表达式、四大函数式接口和Stream API。\n\n## Lambda表达式\nLambda 表达式在Java 语言中引入了一个新的语法元 素和操作符。这个操作符为 “->” ，该操作符被称 为 Lambda 操作符或剪头操作符。\n左侧：指定了 Lambda 表达式需要的所有参数\n右侧：指定了 Lambda 体，即 Lambda 表达式要执行 的功能。\n\n## java内置四大函数式接口\n```\n消费型接口：\n    ①Consumer<T>\n    ②参数类型为T\n    ③无返回\n    ④对类型为T的对象应用操作，包含方法：void accept(T t)\n供给型接口：\n    ①Supplier<T>\n    ②参数无\n    ③返回类型为T\n    ④返回类型为T的对象，包含方法：T get()\n函数型接口：\n    ①Function<T, R>\n    ②参数类型为T\n    ③返回类型为R\n    ④对类型为T的对象应用操作，并返回结果，结果是R类型的对象。包含方法：R apply(T t)\n断言型接口：\n    ①Predicate<T>\n    ②参数类型为T\n    ③返回类型为boolean\n    ④确定类型为T的对象是否满足某约束，并返回boolean值，包含方法 boolean test(T t)\n```\n示例：\n1.消费型接口Consumer\nConsumer<Integer> consumer = (e) -> System.out.println(e);\nconsumer.accept(1);\n2.供给型接口Supplier\nSupplier<Integer> supplier = () -> {return 10;};\nSystem.out.println(supplier.get());\n3.函数型接口Function\nFunction<Integer, String> func = (e) -> {return \"传入数字：\"+e;};\nSystem.out.println(func.apply(10));\n4.断言型接口Predicate\nPredicate<Integer> predicate = (e) -> {return e>10;};\nSystem.out.println(\"传入数字是否大于10：\"+predicate.test(8));\n\n## Stream API\n一、什么是Stream？\n是数据渠道，用于操作数据源（集合、数组等）所生成的元素序列。“集合讲的是数据，流讲的是计算！”\n注意：\n    ① Stream 自己不会存储元素。\n    ② Stream 不会改变源对象。相反，他们会返回一个持有结果的新Stream。\n    ③ Stream 操作是延迟执行的。这意味着他们会等到需要结果的时候才执行。\n\n二、Stream 的操作三个步骤\n1.创建 Stream\n一个数据源（如：集合、数组），获取一个流\n```\nList<String> list=new ArrayList<>();\nStream<String> stream = list.stream();\n\nint[] ints=new int[10];\nIntStream stream1 = Arrays.stream(ints);\n\nStream<String> stream2 = Stream.of(\"aa\", \"bb\");\n\n//创建无限流，但是无限流只是在终止时候才创建，而不是定义就创建\n//迭代\nStream<Integer> stream3 =Stream.iterate(0,x->x+2);//此时不创建\nstream3.forEach(System.out::println);//此时才创建，输出0开始的偶数，而且不停止\n\n//生成\nStream<Double> stream4 =Stream.generate(()->Math.random());\n//如果添加limit中间操作，则此时只输出5个。虽然还是无限流\nstream4.limit(5).forEach(System.out::println);\n```\n2.中间操作\n一个中间操作链，对数据源的数据进行处理\n```\n筛选和切片\nfilter(Predicate p)---接收Lambda，从流中排除某些元素\ndistinct()---筛选，通过流所生成元素的hashCode()和equals()去除重复元素\nlimit(long maxSize)---截断流，使其元素不超过给定数量\nskip(long n)---跳过元素，返回一个扔掉了前n个元素的流。若流中元素不足n 个，则返回一个空流。与limit(n)互补\n\n映射\nmap(Function f)---接收一个函数作为参数，该函数会被应用到每个元 素上，并将其映射成一个新的元素\nmapToDouble(ToDoubleFunction f)---接收一个函数作为参数，该函数会被应用到每个元 素上，产生一个新的 DoubleStream\nmapToInt(ToIntFunction f)---接收一个函数作为参数，该函数会被应用到每个元 素上，产生一个新的 IntStream\nmapToLong(ToLongFunction f)---接收一个函数作为参数，该函数会被应用到每个元 素上，产生一个新的 LongStream\nflatMap(Function f)---接收一个函数作为参数，将流中的每个值都换成另 一个流，然后把所有流连接成一个流\n\n排序\nsorted()---产生一个新流，其中按自然顺序排序\nsorted(Comparator comp)---产生一个新流，其中按比较器顺序排序\n\n查找与匹配\nallMatch(Predicate p)---检查是否匹配所有元素\nanyMatch(Predicate p)---检查是否至少匹配一个元素\nnoneMatch(Predicate p)---检查是否没有匹配所有元素\nfindFirst()---返回第一个元素\nfindAny()---返回当前流中的任意元素\n\n归约\nreduce(T iden, BinaryOperator b)---可以将流中元素反复结合起来，得到一个值。 返回 T\nreduce(BinaryOperator b)---可以将流中元素反复结合起来，得到一个值。 返回 Optional<T>\n```\n3.终止操作(终端操作)\n一个终止操作，执行中间操作链，并产生结果\n```\ncount()---返回流中元素总数\nmax(Comparator c)---返回流中最大值\nmin(Comparator c)---返回流中最小值\nforEach(Consumer c)---内部迭代(使用 Collection 接口需要用户去做迭 代，称为外部迭代。相反，Stream API 使用内部 迭代——它帮你把迭代做了)\ncollect(Collector c)---将流转换为其他形式。接收一个 Collector接口的 实现，用于给Stream中元素做汇总的方法\n```","tags":["java"]},{"title":"学习资料大全","url":"/2019/10/25/学习资料大全/","content":"Java在职加薪\n链接：https://pan.baidu.com/s/1phoRfArS9wviGhR-8eRtng \n提取码：8de9 \nC++，C#，.net\n链接：https://pan.baidu.com/s/1qD1f-P-C4Cex9kjv679l5A \n提取码：1g6o \nJava架构师3大阶段\n链接：https://pan.baidu.com/s/1DlXh33y5t4cZUmZH0cLvCw \n提取码：5s76 \n2019前端架构阶段\n链接：https://pan.baidu.com/s/1Vi2NTEVnFHNkA4RKvrcrzw \n提取码：oefy \nWeb系统运维高级架构师大数据2019版带文档\n链接：https://pan.baidu.com/s/1Gxpg9J5JI9gwuer1fEUkUw \n提取码：okkw \nJava简历模板\n链接：https://pan.baidu.com/s/1I3XBXJ4QmCwvEaOP4WAO0g \n提取码：7ukn \n实际工作需求文档\n链接：https://pan.baidu.com/s/15Xaz80OcmkNMTXJ8EDjsnQ \n提取码：rt8r\nSpringCloud微服务实战\n链接：https://pan.baidu.com/s/108715JLvDKvqmU09UNObRg \n提取码：azii\nRedis入门到高级\n链接：https://pan.baidu.com/s/1r8m1-WuRTwTyltCDvxJ6hw \n提取码：pis2\nGoogle面试官Java面试\n链接：https://pan.baidu.com/s/1860stw8CfcU_h3PpOS23zQ \n提取码：c1n1\n前端（一）\n链接：https://pan.baidu.com/s/1SnV5KUZao9_CCzOltrio0w \n提取码：31xf \nJava（一）\n链接：https://pan.baidu.com/s/1aNXdxWWiaEA65y9G0iweSA \n提取码：7a38 \n新python机器学习\n链接：https://pan.baidu.com/s/1ZR-ekC7CDzQ52C4o0kfZKA \n提取码：7adl \nSpringBoot点餐系统\n链接：https://pan.baidu.com/s/1dS50UstBXuEWeflAX63anQ \n提取码：y8pf \n从0开始Java开发电商项目\n链接：https://pan.baidu.com/s/1EQw5e82FRiFqXimS_SnBFQ \n提取码：92d9\nSSM开发大众点评\n链接：https://pan.baidu.com/s/1uT5ZHfG0bjh4rBDQGRUYvg \n提取码：lqmy\nZookeeper分布式\n链接：https://pan.baidu.com/s/14WWMFSa-SwUdBkZW5o7J_w \n提取码：hzd9\n面试指导\n链接：https://pan.baidu.com/s/1VWfxRKUqbUC4TSVeEBLYpA \n提取码：kcam\nC，C++全栈\n链接：https://pan.baidu.com/s/1EptqnL50MNW6ZfNhWV8nGA \n提取码：xnk9 \nJava算法大全源码包\n链接：https://pan.baidu.com/s/1YoR4za5eLaHKXlxKo7vApQ \n提取码：ghe8\n500套小程序源码\n链接：https://pan.baidu.com/s/1dL7H1A56MbbNxw4qtoqsVQ \n提取码：1ml7\n小程序教程大全\n链接：https://pan.baidu.com/s/1rrQpafidyvBfRb7BgZQ2yA \n提取码：f3ig\n前端成长之路\n链接：https://pan.baidu.com/s/1onomcQfoCM5ps22ifPskJg \n提取码：n46s\n前端面试题\n链接：https://pan.baidu.com/s/1EZmJLDjV0UeEaSMeYDJFRQ \n提取码：d5yp\n前端跳槽技巧\n链接：https://pan.baidu.com/s/1aNQbYcJ8IugTmzqkLDa6Lg \n提取码：yjjl\nJava面试套路\n链接：https://pan.baidu.com/s/1lhCsHiXT8EwhOJ7OEIPs-Q \n提取码：mm1i\nJava面试突击营\n链接：https://pan.baidu.com/s/1lo6wQ_xKQyy-V8oC4G2o2A \n提取码：1tvy\n9000套网页模板\n链接：https://pan.baidu.com/s/1gtwGck3gyi8MbkoyTA9n9Q \n提取码：tm7n\nJava笔试题库\n链接：https://pan.baidu.com/s/1rQVRd_6jzbX7_u4NLsvilg \n提取码：177i\n300套小程序源码\n链接：https://pan.baidu.com/s/1itMrua0ZPVHtZ0tmw3j_DA \n提取码：g6r6 \n进入大数据 Spark SQL 的世界\n链接：https://pan.baidu.com/s/1_AINgCN8KaQEbnJRkWnKdw \n提取码：7j85\nJava深入微服务原理改造房产销售平台\n链接：https://pan.baidu.com/s/1O7VE9AOB8AKaYYp0d1HOrw \n提取码：2f9i \n表白神器链接：https://pan.baidu.com/s/1EXK0BYqX-gXuhZGOWWB8zg 密码：m3ih\n超实用前端资料链接：https://pan.baidu.com/s/1dzMNAgTWpmCDezHptpg_ig  \n提取码：7hcj \nJS设计模式全解链接：https://pan.baidu.com/s/1G4jMHzWmVG_AioqN7I0rFQ \n提取码：uti9 \n疑难问题解决方案链接：https://pan.baidu.com/s/1cHivqaloYo0l4UL6ZHEP2w \n提取码：2lof\n玩转算法\n链接：https://pan.baidu.com/s/1gTGwVegBWmMntr7TJZMbyw \n提取码：pywv \n大数据视频和资料：                              \n链接: https://pan.baidu.com/s/1bqUXYKf 密码: k38w\nReact Native项目实战\n链接：https://pan.baidu.com/s/15-hC110OoVTQOiBczsb_WA \n提取码：8mk7 \nReact 贯穿全栈开发APP\n链接：https://pan.baidu.com/s/1JgcdhfguEvYhlVFsgkzIEA \n提取码：a3yf\nJava并发编程\n链接：https://pan.baidu.com/s/1VKAN7wTnpKo7PN3QXywa5A \n提取码：hznr \n前端视频和资料：                             \n 链接: https://pan.baidu.com/s/1gfjxHL5 密码: hjua\nPython高级编程技巧\n链接：https://pan.baidu.com/s/1adz1uuxBOdelVeXAN0SC5g \n提取码：evxr \nbootstrap视频和资料：                     \n链接：https://pan.baidu.com/s/1luqC5W0GBsqBfgRG2LuOMQ 密码：48w3\n面试经验指导链接：https://pan.baidu.com/s/1DSDLCWW5T_PQ8zsf5LMkCQ \n提取码：r7qv \n0基础入门安卓\n链接：https://pan.baidu.com/s/1VcuZ8im8p5lDSw1izaQBIw \n提取码：a38m \n第一套软件测试教程\n链接：https://pan.baidu.com/s/1igq6HbJYK_11eG1XiSoIBQ \n提取码：7d6b  \n软件测试指导\n链接：https://pan.baidu.com/s/1uqSzKXVuAgg8JET0aoN3Nw \n提取码：t1qo\n高级架构师进阶\n链接：https://pan.baidu.com/s/19r5i1FdXW6glSy2ZQ71eFA \n提取码：czb4 \n\npython视频和资料：                          \n链接: https://pan.baidu.com/s/1jJQaagA 密码: e1gm\nJava开发人工智能远程监控\n链接：https://pan.baidu.com/s/1x2uzAHscTLf8t-G_3LrXLw \n提取码：b0hn\nPPT2000套\n链接：https://pan.baidu.com/s/1HH50bYZBc659scz8SROiHQ \n提取码：13h3\nSSH个人理财系统\n链接：https://pan.baidu.com/s/1-BybATsIfRR4TU7Z-PlAaQ \n提取码：5a99\nPython全套（内有爬虫）\n链接：https://pan.baidu.com/s/1GdOxS1nqNv2t33C6dS6tmA \n提取码：g19z \nCMR系统\n链接：https://pan.baidu.com/s/1NfKOLfudJqbE-gTd8SUuzQ \n提取码：fjq3 \nSpring源码解析\n链接：https://pan.baidu.com/s/1zOHWBUyVsLfn4NGmN6etvw \n提取码：i8gd \nHadoop视频和资料：                       \n 链接：https://pan.baidu.com/s/1wjhXxD3-ZuoRHv0tRLsP8w 密码：y075\n软件方法论\n链接：https://pan.baidu.com/s/1JcqLQS4jIDNHwcZ8rlv95g \n提取码：9p8h\n基于Spring团购项目链接：\nhttps://pan.baidu.com/s/12oqsuKtR46etIWYs2KpH8A \n提取码：8yzq\nLinux指导\n链接：https://pan.baidu.com/s/1RfFQWLu_VmkSYHp4Aj2RVg \n提取码：9t8i\nJavaEE实战\n链接：https://pan.baidu.com/s/1Fk8JM8gzNBamvbxLnJ-2ow \n提取码：semf \nmysql视频和资料：                       \n链接：https://pan.baidu.com/s/14EoVSlWFwAEzsa8-XC61-A 密码：6cde\n宅急送项目\n链接：https://pan.baidu.com/s/1UQbC8H0B5QqOimfOq2W2Kg \n提取码：oz3h\nJava开发二维码\n链接：https://pan.baidu.com/s/1MeERyivNIJOaFznLUATEBA \n提取码：yd6d\n开发云盘\n链接：https://pan.baidu.com/s/1yq5BbW-Hu19XCYyxnJZHHg \n提取码：di81 \n在线支付系统\n链接：https://pan.baidu.com/s/1iCzfUMQgE25KmaVix4c_Ig \n提取码：u6bw\nJava开发音频播放器\n链接：https://pan.baidu.com/s/1LD4WajbwkGajDRmYAdqX7A \n提取码：lxx5\n高并发程序设计\n链接：https://pan.baidu.com/s/1HpWceif04YiUVd_LvQCFiA \n提取码：bj3u \n数据分析视频和资料：                       \n 链接：https://pan.baidu.com/s/19t389HP0bx2RJdK6GlTQOA 密码：gezo\nLonic3多平台开发企业级社区平台链接：\n链接：https://pan.baidu.com/s/15NPZG_CnPkisup_0wpez-g \n提取码：nbzv \n高并发商城\n链接：https://pan.baidu.com/s/1_TBNzl3uBxIFYfwzPZEPrw \n提取码：6cmm\n自动化测试Selenium\n链接：https://pan.baidu.com/s/1gW2FcR5mcgguVg4w05S2vQ \n提取码：ksxo \n让你的页面性能飞起来\n链接：https://pan.baidu.com/s/1Lx4mhEK3bygVGWzjMequCg \n提取码：1w12\nNetty开发聊天系统\n链接：https://pan.baidu.com/s/1IbkUVZ82HvRZLFfoP0eYlQ \n提取码：lbno\n报名系统\n链接：https://pan.baidu.com/s/1m1L4shEaGHi_aaRuwHlUeQ \n提取码：36o3 \ngo语言视频和资料：                          \n链接：https://pan.baidu.com/s/1bIqDCXld1oHxHTqfhx6Acw 密码：xp6v\n手机端开发视频和资料：                    \n链接：https://pan.baidu.com/s/1z8Q2bZ_ZYzLbjIHRqVjrvQ 密码：1xgt\nscale视频和资料：                             \n链接：https://pan.baidu.com/s/1IOX-gjWJtWam3XYZk9l6BQ 密码：euql\n微服务气象实战：\n链接：https://pan.baidu.com/s/1A-9DPRPK7D3d2KcocZwRig \n提取码：qz2f \nspark视频和资料：                            \n链接：https://pan.baidu.com/s/1IOX-gjWJtWam3XYZk9l6BQ 密码：euql\n响应式一招开发制胜\n链接：https://pan.baidu.com/s/1yLxWwW2Ql0fo0R-p8mt_qw \n提取码：r52v \n四大维度解锁Webpack3.0前端工程化\n链接：https://pan.baidu.com/s/1svUZaIruItMV8NPAMzW-cw \n提取码：uwe7 \nSVN视频和资料：                              \n链接：https://pan.baidu.com/s/1QOXjJNF0_BOLN2hePal5_g 密码：1way\n网上商城Extjs4.1+Spring3.2+hibernate4.1+MySql5（视频+源码）：\n链接：https://pan.baidu.com/s/1wQAGwXBDK5XmZCl_J29Qug \n提取码：xyme \nvue.js高仿饿了么\n链接：https://pan.baidu.com/s/1uqBpqttmP_jCZoao57Gz9g \n提取码：km8w\n大型SpringMVC，Mybatis，Redis，Solr，Nginx，SSM分布式电商项目视频教程\n链接：https://pan.baidu.com/s/1m71jc-K-0xfJ3zC6Au_byQ \n提取码：tjpx \nSpring Cloud\n链接：https://pan.baidu.com/s/1EkZwDVcqLY8OZ42NxHEuPA \n提取码：18nj\n\n第一套前端全套视频和源码：             \n链接：https://pan.baidu.com/s/1-eTjKfe1Ozge0YccblhY4w 密码：eyxs\n第二套前端全套视频和源码：             \n链接：https://pan.baidu.com/s/1e6OC7fBWWQuzU6sGDj0Spw 密码：p8qm\n第三套前端全套视频和源码：             \n链接：https://pan.baidu.com/s/1rd6gB64fS17ylqi3A9IA-w 密码：egy5\nPHP全套第一套视频和资料：             \n链接：https://pan.baidu.com/s/13DCQxHpLos6VcB6gY5LZSw 密码：tmqq\nPHP全套第二套视频和资料：             \n链接：https://pan.baidu.com/s/18GF5u8Z4PploD2lYFgs_Ww 密码：l84u\nWeb自动化测试 Selenium基础到企业应用\n链接：https://pan.baidu.com/s/1XAuKpMXenB9qs1QNMF9g-Q \n提取码：2xew\n京东手机端制作视频和源码：             \n链接：https://pan.baidu.com/s/1GcCgnuYoZoOUadA8IpiywA 密码：o7z9\n基于Laravel，AngularJS全栈开发知乎\n链接：https://pan.baidu.com/s/1MKwxwY6GmHJIdT2d3s_F2Q \n提取码：uvv7 \n强力django+杀手级xadmin 打造上线标准的在线教育平台\n链接：https://pan.baidu.com/s/1enDpWa6jmRh5FR5cMvTFJQ \n提取码：bfwy \n前端 Vue+Node+MongoDB高级全栈开发\n链接：https://pan.baidu.com/s/1EpuXIb7kpVc_7VrstTMWRg \n提取码：8vcp \n电商秒杀活动视频和源码                   \n链接：https://pan.baidu.com/s/1RHHV8SOC7Q9BnPRTSVWYNg 密码：ze4h\nWeb自动化测试 Selenium基础到企业应用\n链接：https://pan.baidu.com/s/1IlcpX_iHrC2b3d3lyJbZ4w \n提取码：23jb\nNginx\n链接：https://pan.baidu.com/s/1fRjIbk-rsL0HBo1WWaM-OQ \n提取码：5z3a \n麦子商城制作视频和源码：                \n链接：https://pan.baidu.com/s/1DpoF958TsQwdqYGK7r34lw 密码：5ab6\n前端到后台ThinkPHP开发整站\n链接：https://pan.baidu.com/s/1FZa8O03NLEOdSeqqb_HgEw \n提取码：3km2\n快速上手Linux 玩转典型应用\n链接：https://pan.baidu.com/s/1dPZA47vku2eYQY_PhfCOtg \n提取码：2rdm\nVue核心技术 vue实战精讲\n 链接：https://pan.baidu.com/s/1sHStCWy4XJWflft6H_qAKA \n提取码：0ybr \n天猫商城购物车实战视频资料： \n链接：https://pan.baidu.com/s/1UxtMqsszcAKpZ_2a41raSQ 密码：c1rd\n移动端混合APP视频和资料：             \n链接：https://pan.baidu.com/s/1bwDYjR8UMk5pgpvPcxWBfA 密码：tkyj\n企业级网站前端制作视频和源码：      \n链接：https://pan.baidu.com/s/1joNyOi5CegvJW4G-UeBODA 密码：wock\n企业级网站后台制作视频和源码：      \n链接：https://pan.baidu.com/s/1769hXRG6OnWOfpZWwMpA-w 密码：k2wn\nOA办公自动化项目\n链接：https://pan.baidu.com/s/1YqRWtnWJZAFNNCf_Z2SLtA \n密码：ccj9\nCRM客户管理项目\n链接：https://pan.baidu.com/s/1I-OJSE-VXbX9dm8aN0QP4w \n密码：o1vv\n宅急送项目\n链接：https://pan.baidu.com/s/1VFJ7TTwApFUZsQQnogjr-A \n密码：phtf\n校园网项目\n链接：https://pan.baidu.com/s/1H4nUEtw3-WKVN78b6TuklA\n 密码：87gc\nJava邮件开发教程\n链接：https://pan.baidu.com/s/1ZpLoacAYhk4v8_PzyGzxIg \n密码：yzsb\nJava网上在线支付实战视频\n链接：https://pan.baidu.com/s/1t3DjD7Fa7Vv66wyTND2ddQ \n密码：3q1o\n俄罗斯方块游戏开发视频教程\n链接：https://pan.baidu.com/s/1_qXE5PpkEA3h2BX9dz64Bw \n密码：jat1\n银行业务调度系统视频教程\n链接：https://pan.baidu.com/s/18cZZ22va495qjlAAU4jFzA \n密码：w6ri\n供应链系统视频教程\n链接：https://pan.baidu.com/s/1TfV2dfrLnUAYlCVG8ppOlA \n密码：hpz8\n网上商城项目\n链接：https://pan.baidu.com/s/1nHpOCPTinMDOhi07YFRR4w \n密码：xrz0\n药品集中采购视频教程\n链接：https://pan.baidu.com/s/1i4xffBJjF-dwFC-QhrZA0g \n密码：mwtw\n杰信商贸ssm版\n链接：https://pan.baidu.com/s/1m0EmptzKd7WDpYQ_i5fa4Q \n密码：yukp \n国家税务协同平台项目\n链接：https://pan.baidu.com/s/1VkFTRv4DfKShN4VrlZyxdA \n密码：runc\nJavaweb聊天室\n链接：https://pan.baidu.com/s/1qKyQEzRABYDXAOK7Mx8XDQ \n密码：evf5\n网上书店\n链接：https://pan.baidu.com/s/1Ya2NhTvoSNWthhCAvHUnSw \n密码：82od\n手机进销存系统\n链接：https://pan.baidu.com/s/1SgZnAA_OhOZEjlB4Tr5GRA \n密码：lbng\nQQ聊天器\n链接：https://pan.baidu.com/s/1G1CX_GerVYMYWI3y7bbJRQ \n密码：yvbn\nERP项目\n链接：https://pan.baidu.com/s/1o67q1933TIv0oX3p1_-D9g \n密码：j5sp\n\n坦克大战\n链接：https://pan.baidu.com/s/1iQD04fXlCqrSG1Ezna_iqg \n密码：fjtv\n五子棋游戏\n链接：https://pan.baidu.com/s/1Nwau0LZyWxAWp6Yqmsz0fw \n密码：pw1l\n报名系统\n链接：https://pan.baidu.com/s/1bpJwXzysEgiOfLmULBMBOQ \n密码：vm11\nOA供应链系统\n链接：https://pan.baidu.com/s/1YBoNDKUmmRg-ycTMKxeMNg \n密码：kr6t\n用户管理系统\n链接：https://pan.baidu.com/s/1-LO1aDSdC0Kxy0c7ZNU_Bg \n密码：2wlf\nJava web网上图书商城·完整项目\n链接：https://pan.baidu.com/s/1tjmhDwGAn3Mdsof0Iu-efA \n密码：k3sx\nVIP商场\n链接：https://pan.baidu.com/s/1n3DuWFFIyyRzGI2RxR7jsw \n密码：q8zt\n《企业招聘系统》视频-jeecg开源频台\n链接：https://pan.baidu.com/s/12b_V2LxoBoEP7EWK4Kc_Ew \n密码：20sd\n博客系统项目\n链接：https://pan.baidu.com/s/1xGTxVPr-tijhyZPup54Euw \n密码：4em4\n超级玛丽\n链接：https://pan.baidu.com/s/1Xr3S8Q4DKPoYQkNaW6oOuA \n密码：aw9z\n成绩管理系统\n链接：https://pan.baidu.com/s/1ilvozGK8oB_-j5bhlvcB7w \n密码：l4v2\n个人理财系统\n链接：https://pan.baidu.com/s/1uBY0ym-8jrNTn9ues_a-aw \n密码：lbpc\n人事管理系统项目实战视频\n链接：https://pan.baidu.com/s/1wCNWOG-xaLb1yAvsIdK5Og \n密码：3ayb\nJBPM采购申请系统\n链接：https://pan.baidu.com/s/1tZdSrIIYH4bnZrMBOBqGHg \n密码：0su2","tags":["学习"]},{"title":"Tomcat安装和配置","url":"/2019/10/22/Tomcat安装和配置/","content":"## 一、安装JDK环境\n1.新建JAVA_HOME变量，如：E:\\Java\\jdk1.7.0\n2.编辑Path变量，如：%JAVA_HOME%\\bin;%JAVA_HOME%\\jre\\bin;\n3.新建CLASSPATH变量，如：.;%JAVA_HOME%\\lib;%JAVA_HOME%\\lib\\tools.jar\n4.检查是否配置成功，命令：java -version\n\n## 二、安装Tomcat\n1.进入[官网](http://tomcat.apache.org/)下载压缩文件\n![图片无法显示](01.png)\n![图片无法显示](02.png)\n2.解压缩到指定目录\n3.在windows中注册和删除服务\n```\n删除服务：sc delete 服务名\n创建服务：tomcat的bin目录下，service.bat install\n```","tags":["java"]},{"title":"http请求下载文件","url":"/2019/10/21/http请求下载文件/","content":"## 一、get请求获取文件\n1.后台代码：\n```\n@ApiOperation(value = \"生成拾物报表\", notes = \"生成拾物报表\")\n@GetMapping(\"/create/pick/reportForm\")\npublic String createPickReportForm(\n        HttpServletResponse response,\n        @ApiParam(name = \"type\", value = \"统计类型 1-年度报表 2-月度报表 3-季度报表\", required = true) \n        @PathParam(\"type\") Integer type,\n        @ApiParam(name = \"reportFormType\", value = \"报表类型 1-领取比例 2-滞留时间\", required = true) \n        @PathParam(\"reportFormType\") Integer reportFormType,\n        @ApiParam(name = \"year\", value = \"年份，如：2019\") \n        @PathParam(\"year\") String year,\n        @ApiParam(name = \"month\", value = \"月份，如：2019-01\") \n        @PathParam(\"month\") String month,\n        @ApiParam(name = \"quarter\", value = \"季度 1-春季(01,02,03) 2-夏季(04,05,06) 3-秋季(07,08,09) 4-冬季(10,11,12)\") \n        @PathParam(\"quarter\") Integer quarter) {\n    log.info(\"ReportFormRest.createPickReportForm()---生成拾物报表\");\n    \n    try {\n        String reportFormName = reportFormType==1?\"拾物领取比例\":\"拾物滞留时间\";\n        String fileName = \"拾物领取报表.xls\";\n        ReportFormExportParamVO param = new ReportFormExportParamVO();\n        param.setType(type);\n        if(type == 1) {\n            param.setYear(year);\n            fileName = year+\"年\"+reportFormName+\"年度报表\"+\".xls\";\n        }else if(type == 2) {\n            param.setMonth(month);\n            fileName = month.replace(\"-\", \"年\")+\"月\"+reportFormName+\"月度报表\"+\".xls\";\n        }else if(type == 3) {\n            String[] strs = null;\n            String quarterName = null;\n            QuarterEnum[] quarterEnums = BusEnums.QuarterEnum.values();\n            for(QuarterEnum quarterEnum : quarterEnums) {\n                if(quarterEnum.getCode() == quarter) {\n                    strs = quarterEnum.getQuarter();\n                    quarterName = quarterEnum.getValue();\n                    param.setQuarterName(quarterName);\n                    break;\n                }\n            }\n            List<String> quarters = new ArrayList<>();\n            for(String str : strs) {\n                quarters.add(str);\n            }\n            param.setYear(year);\n            param.setQuarters(quarters);\n            fileName = year+\"年\"+quarterName+reportFormName+\"季度报表\"+\".xls\";\n        }\n        \n        response.setContentType(\"application/force-download\");\n        // 设置文件名\n        response.addHeader(\"Content-Disposition\", \"attachment;fileName=\" + URLEncoder.encode(fileName, \"UTF-8\"));\n        OutputStream outputStream = new BufferedOutputStream(response.getOutputStream());\n        \n        if(reportFormType != null && reportFormType == 1) {\n            reportFormService.exportPickReportForm(param, outputStream, false);\n        }else if(reportFormType != null && reportFormType == 2) {\n            reportFormService.exportRetentionTimePickReportForm(param, outputStream, false);\n        }\n        \n        outputStream.flush();\n        outputStream.close();\n    } catch (Exception e) {\n        log.error(\"生成拾物报表出错。error={}\", e);\n        return \"{}\";\n    }\n    \n    return \"{}\";\n}\n```\n2.页面代码\n```\ncreateReportForm() {\n    var _this = this;\n    let type = this.exportDialog.vo.type;\n    let reportFormType = this.exportDialog.vo.reportFormType;\n    let year = util.formatDate.format(this.exportDialog.vo.year, \"yyyy\");\n    let month = util.formatDate.format(this.exportDialog.vo.month, \"yyyy-MM\")\n    let quarter = this.exportDialog.vo.quarter;\n    let url = \"/ws/sp/reportForm/create/pick/reportForm?\"+\"access-token=\"+this.$store.getters.auth_tokenId+\"&reportFormType=\"+reportFormType+\"&type=\"+type;\n    if(type == 1){\n        url = url + \"&year=\" + year;\n    }else if(type == 2){\n        url = url + \"&month=\" + month;\n    }else if(type == 3){\n        url = url + \"&year=\" + year + \"&quarter=\" + quarter;\n    }\n    this.downloadFile(url, function() {\n        _this.$Wmsg.error(\"生成台账失败\");\n    });\n},\ndownloadFile(url, callback) {\n    var haveIframe = $(\"iframe\");\n    if (haveIframe) {\n        haveIframe.remove();\n    }\n    try {\n        var elemIF = document.createElement(\"iframe\");\n        elemIF.src = url;\n        elemIF.style.display = \"none\";\n        document.body.appendChild(elemIF);\n    } catch (e) {\n        callback && callback(e);\n    }\n}\n```\n\n## 二、post请求获取文件\n1.后台代码：\n```\n@ApiOperation(\"导出迟到\")\n@PostMapping(\"/late\")\npublic void exportLate(QueryParamVO queryParamVO, HttpServletResponse response) {\n    if (queryParamVO != null) {\n        String startDateStr = queryParamVO.getStartDateStr();\n        if (StrUtil.isNotBlank(startDateStr)) {\n            queryParamVO.setBeginTime(DateUtil.parse(startDateStr, \"yyyyMMdd\"));\n        }\n        String endDateStr = queryParamVO.getEndDateStr();\n        if (StrUtil.isNotBlank(endDateStr)) {\n            DateTime dateTime = DateUtil.parse(endDateStr, \"yyyyMMdd\");\n            queryParamVO.setEndTime(DateUtil.offsetDay(dateTime, 1));\n        }\n        String dayStr = queryParamVO.getDayStr();\n        if (StrUtil.isNotBlank(dayStr)) {\n            DateTime dateTime = DateUtil.parse(dayStr, \"yyyyMMdd\");\n            queryParamVO.setBeginTime(dateTime);\n            queryParamVO.setEndTime(DateUtil.offsetDay(dateTime, 1));\n        }\n        Integer week = queryParamVO.getWeek();\n        if (week != null && week > 0) {\n            DateTime beginTime = DateUtil.offsetWeek(\n                    DateUtil.beginOfWeek(DateUtil.parse(FrameworkUtils.beginningOfTermDate(), \"yyyy-MM-dd\")),\n                    week - 1);\n            queryParamVO.setBeginTime(beginTime);\n            Date endTime = DateUtil.offsetDay(beginTime, WEEK_LENGTH);\n            queryParamVO.setEndTime(endTime);\n        }\n    }\n\n    ServletOutputStream out = null;\n    String title = \"迟到统计_\" + DateUtil.format(DateUtil.date(), \"yyyyMMdd\");\n    String fileName = title + \".xlsx\";\n    try {\n        response.setContentType(\"application/vnd.ms-excel;charset=UTF-8\");\n        response.setContentType(\"application/force-download\");\n        response.addHeader(\"Content-Disposition\", \"attachment;fileName=\" + URLEncoder.encode(fileName, \"UTF-8\"));// 设置文件名\n        out = response.getOutputStream();\n        weekService.exportLate(title, queryParamVO, out);\n    } catch (IOException e) {\n        logger.error(\"WeekRest.exportLate出错,error={}\", e);\n    }\n}\n```\n2.页面代码\n```\ndoExport() {\n    let type = this.form.type;\n    let dayStr = null;\n    let week = null;\n    let month = null;\n    let startDateStr = null;\n    let endDateStr = null;\n    if (type == '天' && this.form.date) {\n        dayStr = util.formatDate.format(this.form.date, 'yyyyMMdd');\n    } else if (type == \"周\" && this.form.week) {\n        week = this.form.week\n    } else if (type == \"月\" && this.form.month) {\n        month = this.form.month;\n        startDateStr = util.formatDate.format(month, 'yyyyMMdd');\n        endDateStr = util.formatDate.format(new Date(month.getFullYear(), month.getMonth() + 1, 0), 'yyyyMMdd');\n    }\n    let deptUuid = this.form.deptUuid\n    let grade = deptUuid ? null : this.form.grade;\n\n    let params = {\n        dayStr,\n        week,\n        startDateStr,\n        endDateStr,\n        deptUuid,\n        grade\n    };\n    let url = '/ws/sp/week/late?access-token=' + this.tokenId;\n    this.postExcelFile(params, url);\n},\npostExcelFile(params, url) {\n    //params是post请求需要的参数，url是请求url地址\n    var form = document.createElement(\"form\");\n    form.style.display = \"none\";\n    form.action = url;\n    form.method = \"post\";\n    document.body.appendChild(form);\n    // 动态创建input并给value赋值\n    for (var key in params) {\n        var input = document.createElement(\"input\");\n        input.type = \"hidden\";\n        input.name = key;\n        input.value = params[key];\n        form.appendChild(input);\n    }\n    form.submit();\n    form.remove();\n},\n```","tags":["java"]},{"title":"redis基础知识","url":"/2019/10/18/redis基础知识/","content":"## Redis命令\n1、进入redis命令行：redis-cli -h host -p port -a password\n2、将Redis注册为windows服务：redis-server.exe --service-install redis.windows.conf\n\n## Redis支持的数据类型\nString字符串：\n格式: set key value\nstring类型是二进制安全的。意思是redis的string可以包含任何数据。比如jpg图片或者序列化的对象 。\nstring类型是Redis最基本的数据类型，一个键最大能存储512MB。\n\nHash（哈希）\n格式: hmset name  key1 value1 key2 value2\nRedis hash 是一个键值(key=>value)对集合。\nRedis hash是一个string类型的field和value的映射表，hash特别适合用于存储对象。\n\nList（列表）\nRedis 列表是简单的字符串列表，按照插入顺序排序。你可以添加一个元素到列表的头部（左边）或者尾部（右边）\n格式: lpush  name  value\n在 key 对应 list 的头部添加字符串元素\n格式: rpush  name  value\n在 key 对应 list 的尾部添加字符串元素\n格式: lrem name  index\nkey 对应 list 中删除 count 个和 value 相同的元素\n格式: llen name  \n返回 key 对应 list 的长度\n\nSet（集合）\n格式: sadd  name  value\nRedis的Set是string类型的无序集合。\n集合是通过哈希表实现的，所以添加，删除，查找的复杂度都是O(1)。\n\nzset(sorted set：有序集合)\n格式: zadd  name score value\nRedis zset 和 set 一样也是string类型元素的集合,且不允许重复的成员。\n不同的是每个元素都会关联一个double类型的分数。redis正是通过分数来为集合中的成员进行从小到大的排序。\nzset的成员是唯一的,但分数(score)却可以重复。\n\n## Redis持久化\n持久化就是把内存的数据写到磁盘中去，防止服务宕机了内存数据丢失。\nRedis提供了两种持久化方式:RDB（默认）和AOF。\n\n### RDB机制的策略\nRDB持久化是指在指定的时间间隔内将内存中的数据和操作通过快照的方式保存到redis bin目录下的一个默认名为 dump.rdb的文件，可以通过配置设置自动的快照持久化的方式，我们可以配置redis在n秒内进行快照的时间，如果超过这个时间节点，将会自动执行快照操作。虽然这种方式方便快捷，但是无法保证数据的绝对安全可靠，如果服务器在非备份时间跨度内发生了故障，无法做到对当前状态的实时保存，导致数据丢失。而且每次保存 RDB文件时， Redis都需要 fork()出一个子进程，由子进程来执行具体的持久化工作，对资源消耗较大。——最大缺点\n\n相关配置：\n```\nsave：这里是用来配置触发 Redis的 RDB 持久化条件，比如“save m n”。表示m秒内数据集存在n次修改时\n    save 900 1：表示900 秒内如果至少有 1 个 key 的值变化，则保存\n    save 300 10：表示300 秒内如果至少有 10 个 key 的值变化，则保存\n    save 60 10000：表示60 秒内如果至少有 10000 个 key 的值变化，则保存\n如果你只是用Redis的缓存功能，不需要持久化，那么你可以注释掉所有的 save 行来停用保存功能。可以直接一个空字符串来实现停用：save \"\"\n\nstop-writes-on-bgsave-error：默认值为yes。当启用了RDB且最后一次后台保存数据失败，Redis是否停止接收数据。这会让用户意识到数据没有正确持久化到磁盘上，否则没有人会注意到灾难（disaster）发生了。如果Redis重启了，那么又可以重新开始接收数据了\n\nrdbcompression：默认值是yes。对于存储到磁盘中的快照，可以设置是否进行压缩存储。如果是的话，redis会采用LZF算法进行压缩。如果你不想消耗CPU来进行压缩的话，可以设置为关闭此功能，但是存储在磁盘上的快照会比较大。\n\nrdbchecksum：默认值是yes。在存储快照后，我们还可以让redis使用CRC64算法来进行数据校验，但是这样做会增加大约10%的性能消耗，如果希望获取到最大的性能提升，可以关闭此功能\n\ndbfilename：设置快照的文件名，默认是 dump.rdb\n\ndir：设置快照文件的存放路径，这个配置项一定是个目录，而不能是文件名。默认是和当前配置文件保存在同一目录\n\n也就是说通过在配置文件中配置的 save 方式，当实际操作满足该配置形式时就会进行 RDB 持久化，将当前的内存快照保存在 dir 配置的目录中，文件名由配置的 dbfilename 决定\n```\n\n手动触发RDB快照，命令：1.save（会造成阻塞）2.bgsave（Redis进程执行fork操作创建子进程，RDB持久化过程由子进程负责，完成后自动结束）\n\n### AOF机制的策略\nredis 的 AOF 持久化是在每次接受到的写命令通过 write函数追加到文件中（默认是 appendonly.aof），但是由于操作系统在写入文件时使用了缓存来提高写入效率，还是可能会出现因服务器突然故障而导致的数据丢失，故我们可以通过配置文件告诉redis我们同步数据的时间间隔（默认间隔是每秒同步一次）\n\n相关配置：\n```\nappendonly yes(默认no,关闭)：是否开启AOF持久化\n\nappendfilename \"appendonly.aof\"：AOF持久化配置文件的名称\n\nappendfsync everysec：AOF持久化策略\n    always - 同步持久化，每次发生数据变更会被立即记录到磁盘，性能差但数据完整性比较好\n    everysec - 异步操作，每秒记录，如果一秒钟内宕机，有数据丢失，推荐\n    no - 将缓存回写的策略交给系统，linux 默认是30秒将缓冲区的数据回写硬盘的\n\nAOF的Rewrite(重写)：\n当AOF文件的大小超过了配置所设置的阙值时，Redis就会启动AOF文件压缩，只保留可以恢复数据的最小指令集，可以使用命令bgrewriteaof\n触发机制：Redis会记录上次重写时的AOF文件大小，默认配置时当AOF文件大小是上次rewrite后大小的一倍且文件大于64M时触发\nauto-aof-rewrite-percentage 100\nauto-aof-rewrite-min-size 64mb\n```\n\n## Redis主从复制\n主redis配置不需修改，从需要修改port（从端口）和slaveof host port（对应的主redis的host和port）\n若主从都开启了密码，则从redis需要配置masterauth\n\n<div style=\"width:100px\">主机说明</div> | <div style=\"width:200px\">主机IP</div> | <div style=\"width:100px\">端口</div>\n:---: | :---: | :---:\nmaster | 192.168.250.132 | 7000\nslave | 192.168.250.133 | 7001\nslave | 192.168.250.134 | 7002\n\n<div style=\"color: red\">\n注意：\n1.redis安装版本必须保持一致\n2.132服务器配置masterauth作用主要是为了后期sentinel引入后重新选举master并且7000端口redis重新加入主从复制时必备的，否则会出现权限不足\n3.设置bind 的IP地址，此IP为redis服务器IP以及本地127，如果没有设置 127，会出现无法启动问题，没有设置服务器IP会出现slave服务器无法连接master服务器。\n</div>\n\n```\n==================132redis启动================================================\n103398:C 08 Jan 2019 17:42:20.481 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo\n103398:C 08 Jan 2019 17:42:20.481 # Redis version=5.0.2, bits=64, commit=00000000, modified=0, pid=103398, just started\n103398:C 08 Jan 2019 17:42:20.481 # Configuration loaded\n103399:M 08 Jan 2019 17:42:20.482 * Increased maximum number of open files to 10032 (it was originally set to 1024).\n103399:M 08 Jan 2019 17:42:20.483 * Running mode=standalone, port=7000.\n103399:M 08 Jan 2019 17:42:20.483 # WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.\n103399:M 08 Jan 2019 17:42:20.483 # Server initialized\n103399:M 08 Jan 2019 17:42:20.483 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.\n103399:M 08 Jan 2019 17:42:20.483 # WARNING you have Transparent Huge Pages (THP) support enabled in your kernel. This will create latency and memory usage issues with Redis. To fix this issue run the command 'echo never > /sys/kernel/mm/transparent_hugepage/enabled' as root, and add it to your /etc/rc.local in order to retain the setting after a reboot. Redis must be restarted after THP is disabled.\n103399:M 08 Jan 2019 17:42:20.483 * Ready to accept connections\n\n==================133redis启动开始请求同步======================================\n103399:M 08 Jan 2019 17:44:56.213 * Replica 192.168.250.133:7001 asks for synchronization\n103399:M 08 Jan 2019 17:44:56.213 * Full resync requested by replica 192.168.250.133:7001\n\n# 主从复制 默认 RDB 持久化\n103399:M 08 Jan 2019 17:44:56.213 * Starting BGSAVE for SYNC with target: disk\n103399:M 08 Jan 2019 17:44:56.214 * Background saving started by pid 103768\n103768:C 08 Jan 2019 17:44:56.216 * DB saved on disk\n103768:C 08 Jan 2019 17:44:56.216 * RDB: 4 MB of memory used by copy-on-write\n103399:M 08 Jan 2019 17:44:56.299 * Background saving terminated with success\n\n# 133 redis 数据同步成功\n103399:M 08 Jan 2019 17:44:56.299 * Synchronization with replica 192.168.250.133:7001 succeeded\n\n==================134redis启动开始请求同步=======================================\n103399:M 08 Jan 2019 17:45:25.389 * Replica 192.168.250.134:7002 asks for synchronization\n103399:M 08 Jan 2019 17:45:25.389 * Full resync requested by replica 192.168.250.134:7002\n\n# 主从复制 默认 RDB 持久化\n103399:M 08 Jan 2019 17:45:25.389 * Starting BGSAVE for SYNC with target: disk\n103399:M 08 Jan 2019 17:45:25.390 * Background saving started by pid 103858\n103858:C 08 Jan 2019 17:45:25.391 * DB saved on disk\n103858:C 08 Jan 2019 17:45:25.392 * RDB: 4 MB of memory used by copy-on-write\n103399:M 08 Jan 2019 17:45:25.402 * Background saving terminated with success\n\n# 133 redis 数据同步成功\n103399:M 08 Jan 2019 17:45:25.402 * Synchronization with replica 192.168.250.134:7002 succeeded\n\n==================134redis关闭日志===============================================\n103399:M 08 Jan 2019 17:51:13.850 # Connection with replica 192.168.250.134:7002 lost.\n\n==================134redis重新启动日志============================================\n103399:M 08 Jan 2019 17:52:28.885 * Replica 192.168.250.134:7002 asks for synchronization\n103399:M 08 Jan 2019 17:52:28.885 * Partial resynchronization request from 192.168.250.134:7002 accepted. Sending 588 bytes of backlog starting from offset 43.\n\n\n==================132redis强制关闭================================================\n103399:M 08 Jan 2019 17:54:06.369 # User requested shutdown...\n103399:M 08 Jan 2019 17:54:06.369 * Removing the pid file.\n103399:M 08 Jan 2019 17:54:06.369 # Redis is now ready to exit, bye bye...\n\n==================132redis 主服务器再次上线，同步数据以及连接slave服务器===============\n105223:M 08 Jan 2019 17:54:47.189 * Background saving terminated with success\n105223:M 08 Jan 2019 17:54:47.189 * Synchronization with replica 192.168.250.133:7001 succeeded\n105223:M 08 Jan 2019 17:54:47.807 * Replica 192.168.250.134:7002 asks for synchronization\n105223:M 08 Jan 2019 17:54:47.807 * Partial resynchronization not accepted: Replication ID mismatch (Replica asked for 'd0ff33789382fccfe621d9ad03c26cc545bda3fa', my replication IDs are '00591a20c6cafe8f906632746d514e99213ee121' and '0000000000000000000000000000000000000000')\n105223:M 08 Jan 2019 17:54:47.807 * Starting BGSAVE for SYNC with target: disk\n105223:M 08 Jan 2019 17:54:47.808 * Background saving started by pid 105229\n105229:C 08 Jan 2019 17:54:47.809 * DB saved on disk\n105229:C 08 Jan 2019 17:54:47.809 * RDB: 4 MB of memory used by copy-on-write\n105223:M 08 Jan 2019 17:54:47.894 * Background saving terminated with success\n105223:M 08 Jan 2019 17:54:47.894 * Synchronization with replica 192.168.250.134:7002 succeeded\n```\n\n总结：\n1、slave服务器上面的数据都是从master服务器上同步的，一旦master挂掉，则slave服务器无法进行增量同步，假设某项目使用了slave服务器进行写的操作，当master服务器开启后，slave服务器会进行与master服务器进行全量同步，这样导致原先保存在slave上的数据丢失，当然这个例子是假设，一般slave只当做读的操作。\n2、如果master宕机后，如何保证redis还可以正常使用呢？则我们就需要引入Sentinel进行master的选择啦，哨兵模式Sentinel-当redis 挂掉后自动选举 主redis。\n\n## 哨兵模式Sentinel\n1.相关配置\n```\nport 26379\ndaemonize yes\nlogfile \"26379.log\"\ndir \"./\"\n## 告诉sentinel去监听地址为ip:port的一个master，这里的master-name可以自定义，quorum是一个数字，指明当有多少个sentinel认为一个master失效时，master才算真正失效\nsentinel monitor mymaster 192.168.1.5 6381 2\n## 这个配置项指定了需要多少失效时间，一个master才会被这个sentinel主观地认为是不可用的。 单位是毫秒，默认为30秒\nsentinel down-after-milliseconds mymaster 30000\n## 当进行failover时，配置所有slaves指向新的master所需的最大时间。不过，即使过了这个超时，slaves依然会被正确配置为指向master，但是就不按parallel-syncs所配置的规则来了。\nsentinel failover-timeout mymaster 15000\n## 设置连接master和slave时的密码，注意的是sentinel不能分别为master和slave设置不同的密码，因此master和slave的密码应该设置相同\nsentinel auth-pass mymaster wstroRedis\n## 这个配置项指定了在发生failover主备切换时最多可以有多少个slave同时对新的master进行 同步，这个数字越小，完成failover所需的时间就越长，但是如果这个数字越大，就意味着越 多的slave因为replication而不可用。可以通过将这个值设为 1 来保证每次只有一个slave 处于不能处理命令请求的状态。\nsentinel parallel-syncs mymaster 1\nbind 192.168.1.5 127.0.0.1\n```\n<div style=\"color: red\">sentinel采用的也是是集群部署的方式，其他的配置相同，只修改一下logfile、端口port以及bind绑定的数据</div>\n\n\n## 摘自\nhttps://www.cnblogs.com/guolianyu/p/10239913.html\nhttps://blog.csdn.net/men_wen/article/details/72724406","tags":["redis"]},{"title":"面试相关","url":"/2019/10/18/面试相关/","tags":["java"]},{"title":"软件开发中会用到的图","url":"/2019/10/17/软件开发中会用到的图/","content":"## 一、背景\n\n　　大家应该在从事软件开发领域工作时间有一段时间之后，就开始有画图的意识，不管是懵懂的学别人还是想更好的让其它人理解自己的一个观点。所谓“一图胜千言”，我们身处于软件开发这个水很深且要求精确的复杂领域里，要想把事情做好，最基本的是要把事情想明白，其次还要让相关的人能够明白你要说的东西，进行协作。\n\n　　特别对于一位架构师来说，能否画得一手好图尤其重要，因为相关的干系人数较多，要让不同领域的人能够达成一个统一的认识，是一件不太容易但也是必须要做好的事情。\n\n\n\n## 二、图为了解决什么问题\n\n　　软件开发涉及的流程是：需求 --> 开发 --> 测试 --> 发布上线。作图本身是个设计的工作，是个前期工作。那么从软件开发的整个生命周期来说，用到的图的地方是在前期的需求、开发阶段较多。在软件开发这个非常抽象的领域，只要涉及到多人协作，那么通过文字来进行交流叙述是非常晦涩难懂的，需要沟通好几遍才能理解达成一致也是比较常见的情况。那么我们画图，就是为了把不适合用言语表述的内容通过作图的方式呈现出来，让相关协作者有一个共同的具象的参照物。这个参照物可以有它的额外价值，是对软件长期价值的延伸，一份一致、清晰的设计图，可以给后续的软件迭代提供非常有帮助的决策依据。当然保证设计图与系统的一致本身也是件费精力的事情。\n\n\n\n## 三、不同流程中适合运用的图\n### 1.用例图\n![图片无法显示](01.jpg)\n　　用例图是UML交互图中的一种，是指由参与者（Actor）、用例（Use Case），边界以及它们之间的关系构成的用于描述系统功能的视图。用例图（User Case）是外部用户（被称为参与者，一般为软件的面向用户）所能观察到的系统功能的模型图。\n\n　　适用场景：当新做一个产品或者功能的时候，首先需要明确核心方向，用例图就是整理这个核心方向的工具。它用来说明的是谁要使用系统，以及他们使用该系统可以做些什么。可以理解为是MVP思想的写照，去除画龙点睛的功能，这些就是基础、核心。\n\n　　缺点：仅仅描述的是提供什么功能，不能表达非功能需求，如可靠性、性能等非功能需求。\n\n### 2.鲁棒图（Robustness Diagram）\n![图片无法显示](02.jpg)\n　　\n\n　　可能英文名Robustness Diagram更为常见一些，用于衔接用例图之后的设计，识别出系统在用例图中的各种职责，对后续的细节设计提供基础。算是对用例图的一种延伸。\n\n　　适用场景：在确立用户场景之后，如果需要将关键功能设计出来，那么就需要它了。作图过程中最关键的2个点，发现职责，和梳理各个职责之间的关系。\n\n　　缺点：和用例图是一样缺点，唯一的变化是，其有了粗粒度的实现层面的内容。\n\n \n\n### 3.思维导图\n![图片无法显示](03.jpg)\n　　\n\n　　思维导图是一个很厉害的发明，他将我们的思考过程具象化了，完美展示了由点到面不断发散的过程。但是它最大的价值，反而不是最终呈现出来的这个图，而是促进了思考的过程。并且需要注意的是，一定要把一条分支走到尽头，再回过头来走其它的分支，把思想榨干。 \n\n　　适用场景：在一个事情刚开始的萌芽期，不知如何下手；或者陷入一个困境的时候。利用思维导图来活跃大脑，进行发散思维。这时候如果结合头脑风暴，效果更佳。\n\n　　缺点：它是一种树状的信息分层可视化展视，结构比较固定，不适合分支间互相交互比较复杂的信息展示。\n\n　　\n\n### 4.DFD（Data Flow Diagram）图\n![图片无法显示](04.jpg)\n\n\n　　DFD图是从数据传递和加工角度，以图形方式来表达系统的逻辑功能、数据在系统内部的逻辑流向和逻辑变换过程，是结构化系统分析方法的主要表达工具及用于表示软件模型的一种图示方法。\n\n　　适用场景：在将思维导图得出的东西进行整合、梳理形成一个粗粒度的流程。这个其实类似与DDD中的上下文映射图，是在需求分析过程中做宏观设计的一种方式。\n\n　　缺点：反映系统“做什么”，不反映“如何做”，粒度算是中等，需要其它更细粒度的图来对细节做支撑。\n\n \n\n### 5.流程图\n![图片无法显示](05.jpg)\n![图片无法显示](06.jpg)\n　　\n\n　　上面贴了2张图都是流程图，流程图有时也称作输入-输出图。该图直观地描述一个工作过程的具体步骤，各种操作一目了然，不会产生“歧义性”，便于理解，算法出错时容易发现。流程图对准确了解事情是如何进行的，以及决定应如何改进过程极有帮助。大到系统级别、小到某个操作背后的运转逻辑都可以使用流程图来画，我个人认为这应该是被最多人认识的图，没有之一。\n\n　　适用场景：正如上面所说这个适用场景比较广，日常工作中小到算法逻辑，大到战略层面的执行落地都需要它。主要用它来将背后的流程可视化，辅助做决策去（如改进等）。\n\n　　缺点：所占篇幅较大，由于允许使用流程线，过于灵活，不受约束，使用者可使流程任意转向，从而造成程序阅读和修改上的困难，不利于结构化程序的设计。　　\n\n 　　\n\n### 6.UML类图\n![图片无法显示](07.jpg)\n　　\n\n　　UML类图是UML交互图中的一种，也是我们较常见的一种。类图是描述系统中的类，以及各个类之间的关系的静态视图。它不但是设计人员关心的核心，更是实现人员关注的核心。\n\n　　适用场景：一般作为编码前做的最后一步，将设计转为相应的模型。也可以使用Code First的方式直接在项目中建模，现在的VS也支持直接从代码中生成UML类图。\n\n　　缺点：缺点就是画起来太费时间了，但反过来其表达的粒度更细致，是代码实现级别的内容。由于现在有比较多的工具可以从代码生成UML类图，甚至在大部分提倡使用Code First的场景下，我们画UML类图的机会是越来越少了。\n\n \n\n### 7.状态图\n![图片无法显示](08.jpg)\n　　\n\n　　状态图是对类图的补充。描述类的对象所有可能的状态，以及事件发生时状态的转移条件。可以捕获对象、子系统和系统的生命周期。他们可以告知一个对象可以拥有的状态，并且事件(如消息的接收、时间的流逝、错误、条件变为真等)会怎么随着时间的推移来影响这些状态。一个状态图应该连接到所有具有清晰的可标识状态和复杂行为的类；该图可以确定类的行为，以及该行为如何根据当前的状态变化，也可以展示哪些事件将会改变类的对象的状态。\n\n　　适用场景：当有一个对象拥有多个状态的时候，想要表达清楚状态之间的演变关系（也就是这个对象的生命周期）。比如通过什么条件触发状态变动的，到达某个状态之后会做什么动作等。这也是基于事件驱动设计的良好可视化图。\n\n　　缺点：仅能表达行为/事件与状态之间的演变关系，不适用于其它领域。\n\n \n\n### 8.E-R图\n![图片无法显示](09.jpg)\n　　\n\n　　E-R图提供了表示实体型(Entity)、属性(Attribute)和联系(Relationship)的方法。其中最核心的还属联系(Relationship)的表示。\n\n　　适用场景：虽然在UML类图中，也可以体现出聚合、依赖等关系。但是如果相关联的模型数量巨大的话，你会发现看起来特别费劲，要缩的很小才能看清全貌。这时候你需要E-R图出场了。\n\n　　缺点：相对类图来说，E-R图无法定义类/实体的行为。它更面向数据库而不是代码。\n\n \n\n### 9.UML时序图\n![图片无法显示](10.jpg)\n\n\n　　时序图也是UML交互图中的一种，是描述对象是如何交互的，并且将重点放在消息序列上。也就是说，描述消息是如何在对象间发送和接收的。时序图有两个坐标轴：纵坐标轴显示时间，横坐标轴显示对象。\n\n　　适用场景：一般当我们想反映一个包含顺序的交互流程，比如http请求的生命周期、页面上某个按钮背后流转细节等情况时，就需要它了。\n\n　　缺点：一个时序图仅能面向一个Case，同时画起来比较费时间。\n\n\n\n## 四、实际的运用\n\n　　其实上一节中图的顺序就是按照由层次从高到底，粒度从粗到细规划的。我们可以用用例图来确定用户核心需求，再用Robustness Diagram定义好关键功能，随后在关键功能的实现上通过思维导图进行发散，然后用DFD图把粗粒度的内容串起来，至此大体的设计工作算是完成了。\n\n　　然后再通过流程图、UML类图、状态图、E-R图、时序图在不同的场景确定细节实现。最终就是Coding的事情了。\n\n　　至于每个图绘画的规范网上资料比较多，这里就不赘述了。如果大家有什么疑问继续交流。　　\n\n\n\n## 五、结语\n\n　　其实最好的图是手稿，不但画起来快，还能让你的思维专注到构思上，用什么颜色之类的问题不会对你产生干扰。另外我们不要为了画图而画图，结合实际的情况把握好尺度，一般情况下，时间上不太会允许我们把图画的面面俱到，能覆盖到核心甚至80%就很好了。\n\n \n\n本文摘自https://mp.weixin.qq.com/s/TRkj4OiPNMWH8x1Qi4fh_g","tags":["java"]},{"title":"webservice规范","url":"/2019/10/10/webservice规范/","content":"## 1.webservice是啥\n准确的来说，webservice不是一种技术，而是一种规范。是一种跨平台，跨语言的规范，用于不同平台，不同语言开发的应用之间的交互。\n\n举个例子，比如在WindowsServer服务器上有个C#.Net开发的应用A，在Linux上有个Java语言开发的应用B，现在B应用要调用A应用，或者是互相调用，用于查看对方的业务数据，就需要webservice的规范。\n\n再举个例子，天气预报接口。无数的应用需要获取天气预报信息，这些应用可能是各种平台，各种技术实现，而气象局的项目，估计也就一两种，要对外提供天气预报信息，这个时候，如何解决呢？webservice就是出于以上类似需求而定义出来的规范。\n\n我们一般就是在具体平台开发webservice接口，以及调用webservice接口，每种开发语言都有自己的webservice实现框架。比如Java 就有 Apache Axis1、Apache Axis2、Codehaus XFire、Apache CXF、Apache Wink、Jboss RESTEasyd等等。其中Apache CXF用的比较多，它也可以和Spring整合。\n\n## 3.调用已发布的webservice\n### 3.1 get请求方式\n\n### 3.2 post请求方式\n\n### 3.3 SOAP方式请求\n\n### 3.4 使用wsimport\n每个ws都会有一个WSDL，WSDL即WebService Description Language – Web服务描述语言。它是通过XML形式说明服务在什么地方－地址。通过XML形式说明服务提供什么样的方法 – 如何调用。我们可以通过这个WSDL来获取和这个ws有关的信息，包括class和java代码。关于这个WSDL后面我再具体分析，这一节先来看一下如何使用。\nwsimport是一个命令，jdk1.6及以上才可以使用，ws针对不同的语言都会有个wsimport命令，我们可以在自己安装的jdk的bin目录下找到这个wsimport.exe，正因为有了这个，所以我们可以在命令行中使用wsimport命令。怎么使用呢？\n每个ws都会有一个WSDL，就拿上面的归属地查询服务来说，上面第二张图上面有个服务说明，点开就可以看到WSDL，当然也可以直接访问浏览器上的url来访问这个WSDL，即xml文档。如下：\n![图片无法显示](01.png)\n目前只需要复制一下那个url即可，然后打开命令提示符窗口，随便进入一个目录下（该目录要保存等会生成的和ws相关的文件，自己事先建一个即可），运行：\nwsimport http://ws.webxml.com.cn/WebServices/MobileCodeWS.asmx?WSDL\n就会生成相应的javabean，当然了，是.class文件，但是我们不想要class文件，我们想要java文件，所以可以使用如下命令：\nwsimport -s http://ws.webxml.com.cn/WebServices/MobileCodeWS.asmx?WSDL\n这样不仅生成了class文件，还生成了java文件，如果我们想要在固定的包下生成这些文件，等会方便直接拷贝到项目里，可以使用下面的命令：\nwsimport -s . -p ws.client.c http://ws.webxml.com.cn/WebServices/MobileCodeWS.asmx?WSDL\n这样就会在目录ws/client/c/下生成所需要的class和java代码，然后我们删掉class文件，直接拷贝ws目录到工程中即可，如下(_Main是我自己写的，用来调用使用的)：\n![图片无法显示](02.png)\n这样就有了号码归属地查询这个ws服务相关的API了，这是通过官方的WSDL来生成的，然后我们如何在自己的项目中使用呢？我新写一个_Main.java文件，直接使用这些API即可，如下：\n```\npublic class _Main {\n    public static void main(String[] args) {\n        // 获取一个ws服务\n        MobileCodeWS ws = new MobileCodeWS();\n        // 获取具体的服务类型：get post soap1.1 soap1.2\n        MobileCodeWSSoap wsSoap = ws.getMobileCodeWSSoap();\n        String address = wsSoap.getMobileCodeInfo(\"18312345678\", null);\n        System.out.println(\"手机归属地信息为：\" + address);\n    }\n}\n```\n这样就很方便了，现在已经完全没有了上面那种连接啊，设置地址啊等等，直接封装好了，我直接调用这些API即可调用远程的webservice。这也是官方推荐的一种方法，当然我们也可以将生成的class文件打包成jar放到工程中。运行一下这个main方法后，也直接返回归属地，没有那些标签的东西了，这才是开发中所需要的东西。\n到这里基本已经会调用webservice了，最后再简单总结一下，ws中这个WSDL很重要，这里面用xml描述了该ws的信息，所以我们可以通过解析WSDL来获取该ws相关的API，然后在自己的项目中调用这些API即可调用该ws。\n————————————————\n版权声明：本文为CSDN博主「eson_15」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。\n原文链接：https://blog.csdn.net/eson_15/article/details/52021319","tags":["java"]},{"title":"keytool生成证书","url":"/2019/09/29/keytool生成证书/","content":"## 一、keytool的概念\nkeytool 是个密钥和证书管理工具。它使用户能够管理自己的公钥/私钥对及相关证书，用于（通过数字签名）自我认证（用户向别的用户/服务认证自己）或数据完整性以及认证服务。在JDK 1.4以后的版本中都包含了这一工具，它的位置为%JAVA_HOME%\\bin\\keytool.exe，如下图所示：\n![图片无法显示](01.png)\n![图片无法显示](02.png)\n\n## 二、创建证书\n创建证书主要是使用\" -genkeypair\"，该命令的可用参数如下：\n![图片无法显示](03.png)\n范例：生成一个名称为test1的证书\nCmd代码：\n```\nkeytool -genkeypair -alias \"test1\" -keyalg \"RSA\" -keystore \"test.keystore\"\n```\n功能：\n创建一个别名为test1的证书，该证书存放在名为test.keystore的密钥库中，若test.keystore密钥库不存在则创建。\n参数说明：\n-genkeypair：生成一对非对称密钥;\n-alias：指定密钥对的别名，该别名是公开的;\n-keyalg：指定加密算法，本例中的采用通用的RAS加密算法;\n-keystore:密钥库的路径及名称，不指定的话，默认在操作系统的用户目录下生成一个\".keystore\"的文件\n![图片无法显示](04.png)\n注意：\n　　<font color=\"red\">1.密钥库的密码至少必须6个字符，可以是纯数字或者字母或者数字和字母的组合等等\n　　2.\"名字与姓氏\"应该是输入域名，而不是我们的个人姓名，其他的可以不填</font>\n执行完上述命令后，在操作系统的用户目录下生成了一个\"test.keystore\"的文件，如下图所示：\n![图片无法显示](05.png)\n\n## 三、查看密钥库里面的证书\n范例：查看test.keystore这个密钥库里面的所有证书\nCmd代码：\n```\nkeytool -list -keystore test.keystore\n```\n![图片无法显示](06.png)\n\n## 四、导出到证书文件\n范例：将名为test.keystore的证书库中别名为test1的证书条目导出到证书文件test.crt中\nCmd代码：\n```\nkeytool -export -alias test1 -file test.crt -keystore test.keystore\n```\n![图片无法显示](07.png)\n运行结果：在操作系统的用户目录(gacl)下生成了一个\"test.crt\"的文件，如下图所示：\n![图片无法显示](08.png)\n\n## 五、导入证书\n范例：将证书文件test.crt导入到名为test_cacerts的证书库中\nCmd代码：\n```\nkeytool -import -keystore test_cacerts -file test.crt\n```\n![图片无法显示](09.png)\n\n## 六、查看证书信息\n范例：查看证书文件test.crt的信息\nCmd代码：\n```\nkeytool -printcert -file \"test.crt\"\n```\n![图片无法显示](10.png)\n\n## 七、删除密钥库中的条目\n范例：删除密钥库test.keystore中别名为test1的证书条目\nCmd代码：\n```\nkeytool -delete -keystore test.keystore -alias test1\n```\n![图片无法显示](11.png)\n\n## 八、修改证书条目的口令\n范例：将密钥库test.keystore中别名为test2的证书条目的密码修改为xdp123456\nCmd代码：\n```\nkeytool -keypasswd -alias test2 -keystore test.keystore\n```\n![图片无法显示](12.png)\n\n## 九、摘自\n[孤傲苍狼](https://www.cnblogs.com/xdp-gacl/p/3750965.html) --- https://www.cnblogs.com/xdp-gacl/p/3750965.html","tags":["java"]},{"title":"将swing程序打包成exe文件","url":"/2019/09/27/将swing程序打包成exe文件/","content":"## 一、创建swing项目\n1.安装WindowBuilder插件：直接在eclipse的Help->eclipse marketplace,中直接搜索内容：WindowBuilder\n\n2.在Eclipse中创建一个JavaSwing项目\n\n方式一： \n```\n创建项目 new--other--WindowBuilder--SWT Designer----SWT/JFace java Project\n创建类new--other----WindowBuilder→Swing Designer→Application Window.\n```\n\n方式二： \n```\n直接创建一个Maven项目\n创建类new--other----WindowBuilder→Swing Designer→Application Window.\n```\n\n## 二、将swing程序打包成jar文件\n1、右键点击项目，选择“Export...”，选择java->JAR file点击Next；资源除了src其他的取消选中，然后指定jar文件保存路径，继续点Next；不需要改，点Next；选择Main class，指定开始运行的类，点击Finish结束。\n![](将swing程序打包成exe文件01.png)\n![](将swing程序打包成exe文件02.jpg)\n![](将swing程序打包成exe文件03.jpg)\n![](将swing程序打包成exe文件04.jpg)\n\n## 三、下载exe4j软件\n注意：版本要和jdk对应好\n\n下载地址：https://exe4j.apponic.com/\n\n## 四、生成可执行文件\n步骤如下图所示：\n![](将swing程序打包成exe文件05.jpg)\n![](将swing程序打包成exe文件06.jpg)\n![](将swing程序打包成exe文件07.jpg)\n![](将swing程序打包成exe文件08.jpg)\n![](将swing程序打包成exe文件09.jpg)\n![](将swing程序打包成exe文件10.jpg)\n![](将swing程序打包成exe文件11.jpg)\n![](将swing程序打包成exe文件12.jpg)\n![](将swing程序打包成exe文件13.jpg)\n![](将swing程序打包成exe文件14.jpg)\n![](将swing程序打包成exe文件15.jpg)\n![](将swing程序打包成exe文件16.jpg)\n![](将swing程序打包成exe文件17.jpg)\n![](将swing程序打包成exe文件18.jpg)","tags":["java"]},{"title":"mysql常用字符串函数","url":"/2019/09/03/mysql常用字符串函数/","content":"1.LOWER(column|str)：将字符串参数值转换为全小写字母后返回\n\n2.UPPER(column|str)：将字符串参数值转换为全大写字母后返回\n\n3.CONCAT(column|str1, column|str2,...)：将多个字符串参数首尾相连后返回\n\n4.CONCAT_WS(separator,str1,str2,...)：将多个字符串参数以给定的分隔符separator首尾相连后返回\n```\n注意：如果有任何参数为null，则函数不返回null，而是直接忽略它\nPIPES_AS_CONCAT：将“||”视为字符串的连接操作符而非或运算符\n```\n\n5.SUBSTR(str,pos[,len])：从源字符串str中的指定位置pos开始取一个字串并返回，是函数SUBSTRING()的同义词。\n\n6.LENGTH(str)：返回字符串的存储长度\n```\n注意：编码方式不同字符串的存储长度就不一样(‘你好’:utf8是6，gbk是4)\n```\n\n7.CHAR_LENGTH(str)：返回字符串中的字符个数\n\n8.INSTR(str, substr)：从源字符串str中返回子串substr第一次出现的位置\n\n9.LPAD(str, len, padstr)：在源字符串的左边填充给定的字符padstr到指定的长度len，返回填充后的字符串\n\n10.RPAD(str, len, padstr)：在源字符串的右边填充给定的字符padstr到指定的长度len，返回填充后的字符串\n\n11.TRIM([{BOTH | LEADING | TRAILING} [remstr] FROM] str), TRIM([remstr FROM] str)：从源字符串str中去掉两端、前缀或后缀字符remstr并返回；如果不指定remstr，则去掉str两端的空格；不指定BOTH、LEADING、TRAILING ，则默认为 BOTH。\n\n12.REPLACE(str, from_str, to_str)：在源字符串str中查找所有的子串form_str（大小写敏感），找到后使用替代字符串to_str替换它。返回替换后的字符串\n\n13.LTRIM(str)，RTRIM(str)：去掉字符串的左边或右边的空格(左对齐、右对齐)\n\n14.REPEAT(str, count)：将字符串str重复count次后返回\n\n15.REVERSE(str)：将字符串str反转后返回\n\n16.CHAR(N,... [USING  charset_name])：将每个参数N解释为整数（字符的编码），并返回每个整数对应的字符所构成的字符串(NULL值被忽略)。\n\n17.FORMAT(X,D[,locale])：以格式‘#,###,###.##’格式化数字X；D指定小数位数；locale指定国家语言(默认的locale为en_US)\n\n18.SPACE(N)：返回由N个空格构成的字符串\n\n19.LEFT(str, len)：返回最左边的len长度的子串\n\n20.RIGHT(str, len)：返回最右边的len长度的子串\n\n21.STRCMP(expr1,expr2)：如果两个字符串是一样的则返回0；如果第一个小于第二个则返回-1；否则返回1","tags":["mysql"]},{"title":"mysql基础操作","url":"/2019/09/03/mysql基础操作/","content":"## 表结构操作\n```\n删除列：alter table person drop column birthday;\n添加列：alter table person add column birthday datetime;\n修改列：alter table person modify count bigint not null;\n添加主键：alter table person add primary key(id);\n删除主键：alter table person drop primary key;\n添加唯一索引：alter table person add unique name_unique_index(name);\n添加普通索引：alter table person add index birthday_index(birthday);\n删除索引：alter table person drop index name_unique_index;（给出索引名）\n改变某一列的编码：alter table person change name name varchar(255) character set utf8;\n修改表名：alter table person to person_new;\n```","tags":["mysql"]},{"title":"mysql事务隔离级别","url":"/2019/09/03/mysql事务隔离级别/","content":"## mysql事务级别设置\n```\n1.查看当前数据库事务级别\n    SELECT @@tx_isolation\n    1）read uncommitted : 读取尚未提交的数据 ：哪个问题都不能解决\n    2）read committed：读取已经提交的数据 ：可以解决脏读 ---- oracle默认的\n    3）repeatable read：重读读取：可以解决脏读 和 不可重复读 ---mysql默认的\n    4）serializable：串行化：可以解决 脏读 不可重复读 和 虚读---相当于锁表\n2.设置事务隔离级别\n    set session transaction isolation level 【事务级别】\n```\n\n## 数据库并发会引发的问题\n1.脏读（dirty read）：A事务读取B事务尚未提交的更改数据，并在这个数据基础上操作。如果B事务回滚，那么A事务读到的数据根本不是合法的，称为脏读。在oracle中，由于有version控制，不会出现脏读\n\n2.不可重复读（unrepeatable read）：A事务读取了B事务已经提交的更改（或删除）数据。比如A事务第一次读取数据，然后B事务更改该数据并提交，A事务再次读取数据，两次读取的数据不一样\n\n3.幻读（phantom read）：A事务读取了B事务已经提交的新增数据。注意和不可重复读的区别，这里是新增，不可重复读是更改（或删除）。这两种情况对策是不一样的，对于不可重复读，只需要采取行级锁防止该记录数据被更改或删除，然而对于幻读必须加表级锁，防止在这个表中新增一条数据\n\n4.第一类丢失更新：A事务撤销时，把已提交的B事务的数据覆盖掉\n\n5.第二类丢失更新：A事务提交时，把已提交的B事务的数据覆盖掉\n\n## 各类事务级别的详情\n（1）读未提交：最低隔离级别，允许一个事务能够读到另一个事务未提交的信息，只对修改数据的并发操作做限制（对于数据而言，写之前加X锁，直到事务结束释放X锁，对应一级封锁协议），这样解决了第一类丢失更新的问题，虽然一个事务不能修改其他事务正在修改的数据，但是可以读到其他事务还未提交的修改，如果这些修改未提交，那么就会成为脏数据，所以还未解决脏读的问题，自然，就算是已经提交的数据，多次读取结果也不一定一样，所以还未解决不可重复读和幻读的问题（存在的问题：脏读，不可重复读，幻读）\n\n（2）读已提交（oracle默认的）：只能读取已经提交的数据，换句话说，就是一个事务读取其他事务中正在修改的数据是不被允许的（一级封锁协议+读之前加S锁，读完数据释放S锁，对应二级封锁协议），由于读完之后就释放S锁，所以不能保证不可重复读与幻读\n\n（3）可重复读（mysql默认的）：在读已提交下，同一事务内，允许多次相同的查询能够得到不同的结果，可以使用二级封锁协议+MVCC使得当前事务只能读取不高于其事务版本的数据，也可以使用三级封锁协议（一级封锁协议+读之前加S锁，直到事务结束释放S锁）能解决可重复读，同时也解决了幻读\n\n（4）可串行化：可重复读与幻读的区别是：可重复读是更改表中行级数据，而幻读是增加表中行级数据，幻读可以通过三级封锁协议消除，可串行化使得所有的事务必须串行化执行，解决了一切并发问题，但会造成大量的等待、阻塞甚至死锁，使系统性能降低","tags":["mysql"]},{"title":"Anaconda相关命令","url":"/2019/08/22/Anaconda相关命令/","content":"### Anaconda安装第三方包\n```\n1.寻找模块\nanaconda search -t conda jieba\n2.根据版本的名称查询具体信息\nanaconda show conda-forge/jieba\n3.根据具体信息中的安装提示进行安装\nconda install --channel https://conda.anaconda.org/conda-forge jieba\n```","tags":["python"]},{"title":"nginx配置","url":"/2019/08/13/nginx配置/","content":"## nginx的location、root、alias指令用法和区别\n```\nroot与alias主要区别在于nginx如何解释location后面的uri，这会使两者分别以不同的方式将请求映射到服务器文件上。\nroot的处理结果是：root路径＋location路径。\nalias的处理结果是：使用alias路径替换location路径。\nalias是一个目录别名的定义，root则是最上层目录的定义。\n```\n\n## nginx配置详情\n```\n#定义Nginx运行的用户和用户组\nuser www www;\n\n#nginx进程数，建议设置为等于CPU总核心数。\nworker_processes 8;\n\n#全局错误日志定义类型，[ debug | info | notice | warn | error | crit ]\nerror_log /var/log/nginx/error.log info;\n\n#进程文件\npid /var/run/nginx.pid;\n\n#一个nginx进程打开的最多文件描述符数目，理论值应该是最多打开文件数（系统的值ulimit -n）与nginx进程数相除，但是nginx分配请求并不均匀，所以建议与ulimit -n的值保持一致。\nworker_rlimit_nofile 65535;\n\n#工作模式与连接数上限\nevents {\n    #参考事件模型，use [ kqueue | rtsig | epoll | /dev/poll | select | poll ]; epoll模型是Linux 2.6以上版本内核中的高性能网络I/O模型，如果跑在FreeBSD上面，就用kqueue模型。\n    use epoll;\n    #单个进程最大连接数（最大连接数=连接数*进程数）\n    worker_connections 65535;\n}\n\n#设定http服务器\nhttp {\n    include mime.types; #文件扩展名与文件类型映射表\n    default_type application/octet-stream; #默认文件类型\n    #charset utf-8; #默认编码\n    server_names_hash_bucket_size 128; #服务器名字的hash表大小\n    client_header_buffer_size 32k; #上传文件大小限制\n    large_client_header_buffers 4 64k; #设定请求缓\n    client_max_body_size 8m; #设定请求缓\n    sendfile on; #开启高效文件传输模式，sendfile指令指定nginx是否调用sendfile函数来输出文件，对于普通应用设为 on，如果用来进行下载等应用磁盘IO重负载应用，可设置为off，以平衡磁盘与网络I/O处理速度，降低系统的负载。注意：如果图片显示不正常把这个改成off。\n    autoindex on; #开启目录列表访问，合适下载服务器，默认关闭。\n    tcp_nopush on; #防止网络阻塞\n    tcp_nodelay on; #防止网络阻塞\n    keepalive_timeout 120; #长连接超时时间，单位是秒\n\n    #FastCGI相关参数是为了改善网站的性能：减少资源占用，提高访问速度。下面参数看字面意思都能理解。\n    fastcgi_connect_timeout 300;\n    fastcgi_send_timeout 300;\n    fastcgi_read_timeout 300;\n    fastcgi_buffer_size 64k;\n    fastcgi_buffers 4 64k;\n    fastcgi_busy_buffers_size 128k;\n    fastcgi_temp_file_write_size 128k;\n\n    #gzip模块设置\n    gzip on; #开启gzip压缩输出\n    gzip_min_length 1k; #最小压缩文件大小\n    gzip_buffers 4 16k; #压缩缓冲区\n    gzip_http_version 1.0; #压缩版本（默认1.1，前端如果是squid2.5请使用1.0）\n    gzip_comp_level 2; #压缩等级\n    gzip_types text/plain application/x-javascript text/css application/xml;\n    #压缩类型，默认就已经包含text/html，所以下面就不用再写了，写上去也不会有问题，但是会有一个warn。\n    gzip_vary on;\n    #limit_zone crawler $binary_remote_addr 10m; #开启限制IP连接数的时候需要使用\n\n    upstream blog.ha97.com {\n        #upstream的负载均衡，weight是权重，可以根据机器配置定义权重。weigth参数表示权值，权值越高被分配到的几率越大。\n        server 192.168.80.121:80 weight=3;\n        server 192.168.80.122:80 weight=2;\n        server 192.168.80.123:80 weight=3;\n    }\n\n    #虚拟主机的配置\n    server {\n        #监听端口\n        listen 80;\n        #域名可以有多个，用空格隔开\n        server_name www.ha97.com ha97.com;\n        index index.html index.htm index.php;\n        root /data/www/ha97;\n        location ~ .*.(php|php5)?$ {\n            fastcgi_pass 127.0.0.1:9000;\n            fastcgi_index index.php;\n            include fastcgi.conf;\n        }\n        #图片缓存时间设置\n        location ~ .*.(gif|jpg|jpeg|png|bmp|swf)$ {\n            expires 10d;\n        }\n        #JS和CSS缓存时间设置\n        location ~ .*.(js|css)?$ {\n            expires 1h;\n        }\n        #日志格式设定\n        log_format access '$remote_addr - $remote_user [$time_local] \"$request\" '\n        '$status $body_bytes_sent \"$http_referer\" '\n        '\"$http_user_agent\" $http_x_forwarded_for';\n        #定义本虚拟主机的访问日志\n        access_log /var/log/nginx/ha97access.log access;\n\n        #对 \"/\" 启用反向代理\n        location / {\n            proxy_pass http://127.0.0.1:88;\n            proxy_redirect off;\n            proxy_set_header X-Real-IP $remote_addr;\n            #后端的Web服务器可以通过X-Forwarded-For获取用户真实IP\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n            #以下是一些反向代理的配置，可选。\n            proxy_set_header Host $host;\n            client_max_body_size 10m; #允许客户端请求的最大单文件字节数\n            client_body_buffer_size 128k; #缓冲区代理缓冲用户端请求的最大字节数，\n            proxy_connect_timeout 90; #nginx跟后端服务器连接超时时间(代理连接超时)\n            proxy_send_timeout 90; #后端服务器数据回传时间(代理发送超时)\n            proxy_read_timeout 90; #连接成功后，后端服务器响应时间(代理接收超时)\n            proxy_buffer_size 4k; #设置代理服务器（nginx）保存用户头信息的缓冲区大小\n            proxy_buffers 4 32k; #proxy_buffers缓冲区，网页平均在32k以下的设置\n            proxy_busy_buffers_size 64k; #高负荷下缓冲大小（proxy_buffers*2）\n            proxy_temp_file_write_size 64k;\n            #设定缓存文件夹大小，大于这个值，将从upstream服务器传\n        }\n\n        #设定查看Nginx状态的地址\n        location /NginxStatus {\n            stub_status on;\n            access_log on;\n            auth_basic \"NginxStatus\";\n            auth_basic_user_file conf/htpasswd;\n            #htpasswd文件的内容可以用apache提供的htpasswd工具来产生。\n        }\n\n        #本地动静分离反向代理配置\n        #所有jsp的页面均交由tomcat或resin处理\n        location ~ .(jsp|jspx|do)?$ {\n            proxy_set_header Host $host;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n            proxy_pass http://127.0.0.1:8080;\n        }\n        #所有静态文件由nginx直接读取不经过tomcat或resin\n        location ~ .*.(htm|html|gif|jpg|jpeg|png|bmp|swf|ioc|rar|zip|txt|flv|mid|doc|ppt|pdf|xls|mp3|wma)$ { \n            expires 15d; \n        }\n        location ~ .*.(js|css)?$ { \n            expires 1h; \n        }\n    }\n}\n```","tags":["nginx"]},{"title":"mysql安装教程","url":"/2019/08/12/mysql安装教程/","content":"## Windows上安装MySQL\n1.先去[官网](https://dev.mysql.com/downloads/mysql/)下载压缩包。\n\n2.修改配置文件\n在解压的文件夹目录下新建my.ini或直接在原配置文件里配置以下基本信息：\n```\n[client]\n# 设置mysql客户端默认字符集\ndefault-character-set=utf8\n \n[mysqld]\n# 设置3306端口\nport = 3306\n# 设置mysql的安装目录\nbasedir=C:\\\\web\\\\mysql-8.0.11\n# 设置 mysql数据库的数据的存放目录，MySQL 8+ 不需要以下配置，系统自己生成即可，否则有可能报错\n# datadir=C:\\\\web\\\\sqldata\n# 允许最大连接数\nmax_connections=20\n# 服务端使用的字符集默认为8比特编码的latin1字符集\ncharacter-set-server=utf8\n# 创建新表时将使用的默认存储引擎\ndefault-storage-engine=INNODB\n```\n\n3.启动MySQL数据库\n```\n以管理员身份打开cmd命令行工具，切换目录：\ncd D:\\Program Files (x86)\\mysql-5.6.34-winx64\\bin\n\n初始化数据库：\nmysqld --initialize --console\n执行完成后会输出root用户的初始密码\n\n安装：\nmysqld install\n\n启动：\nnet start mysql\n\n注意：\n在5.7需要初始化data目录，执行命令：mysqld --initialize-insecure\n初始化后在运行net start mysql即可启动mysql。\n```\n\n4.修改默认密码\n```\nALTER USER 'root'@'localhost' IDENTIFIED BY \"123456\"；\n接下来就可以使用新密码登录了\n```\n\n5.修改mysql用户权限\n```\ngrant all privileges on *.* to root@localhost identified by '123456';\nFLUSH PRIVILEGES;\n如果想远程登录的话，将\"localhost\"改为\"%\"，表示在任何一台电脑上都可以登录。也可以指定某台机器可以远程登录。\n```\n\n## Linux上安装MySQL（压缩包版）\n1.下载mysql压缩包\n下载地址：\nhttp://mirrors.sohu.com/mysql/MySQL-5.7/\nlinux命令下载：\nwget http://mirrors.sohu.com/mysql/MySQL-5.7/mysql-5.7.23-linux-glibc2.12-x86_64.tar.gz\n\n2.建立用户，以及mysql的目录\n```\n建立mysql的组：groupadd mysql\n建立用户并放到mysql组中：useradd -r -g mysql mysql\n给用户设置密码：passwd mysql\n```\n\n3.解压，放到/user/local/mysql目录下\ntar zxvf xxx\n\n4.进行相关配置\n```\n4.1 复制/usr/local/mysql/support-files/my_default.cnf到/etc/my.cnf (mysql启动时自动读取)\n4.2 解决乱码问题，修改my.cnf文件\n增加或修改：\n[mysql]\ndefault-character-set=utf8\n[mysqld]\ndefault-storage-engine=INNODB\ncharacter_set_server=utf8\n4.3 复制/usr/local/mysql/support-files/mysql.server 到/etc/init.d/mysql，修改 /etc/init.d/mysql 参数，给予2个目录位置：\nbasedir=/usr/local/mysql\ndatadir=/usr/local/mysql/data\n4.4 给目录/usr/local/mysql 更改拥有者：chown -R mysql:mysql /usr/local/mysql/\n4.5 初始化mysql数据库，进入mysql/bin目录下执行：\n./mysqld --initialize --user=mysql --basedir=/usr/local/mysql --datadir=/usr/local/mysql/data\n生成出一个data目录，代表数据库已经初始化成功\n4.6 给数据库加密：./mysql_ssl_rsa_setup --datadir=/usr/local/mysql/data\n4.7 启动mysql：\n./mysqld_safe --user=mysql &\n```\n\n5.进入客户端\n```\n1.登录：进入bin目录，./mysql -uroot -p\n2.修改密码：set password=password('你的密码');\n3.远程登录：首先需要\n关闭防火墙：systemctl stop firewalld.service\n禁止firewall开机启动：systemctl disable firewalld.service \n4.给window授权，给所有访问者权限\ngrant all privileges on *.* to root@'%' identified by '123456';\n5.注意：若mysql登录不了，提示需要密码，可以执行以下步骤：\n    5.1 修改my.cnf，在[mysqld]后面任意一行添加“skip-grant-tables”用来跳过密码验证的过程\n    5.2 重启mysql：/etc/init.d/mysql restart\n    5.3 进入之后，进入mysql数据库的user表，修改它的密码字段\n    mysql> use mysql;\n    mysql> update user set password=password(\"你的新密码\") where user=\"root\";\n    mysql> flush privileges;\n    mysql> quit\n```\n\n6.设置开机启动\n添加mysql服务：chkconfig --add mysql\n设置服务开机启动：chkconfig mysql on\n\n7.设置path环境变量\nvi /etc/profile\n设置环境变量：export PATH=$JAVA_HOME/bin:/usr/local/mysql/bin:$PATH\n设好环境变量后就可以在任意目录下登录mysql了\n\n## Linux上安装MySQL（yum源安装）\n1.下载并安装MySQL官方的 Yum Repository\nwget -i -c http://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm\n\n2.安装rpm\nyum -y install mysql57-community-release-el7-10.noarch.rpm\n\n3.安装mysql服务器\nyum -y install mysql-community-server\n\n4.启动mysql服务\nsystemctl start  mysqld.service\n\n5.进入mysql\n首先在/var/log/mysqld.log中找到初始密码，然后进行密码修改：ALTER USER 'root'@'localhost' IDENTIFIED BY 'new password';\n注意：密码设置过于简单会报错，可以进行一下操作来设置\nmysql初始密码规则查看命令：SHOW VARIABLES LIKE 'validate_password%';\n进行一下设置后就可以使用简单密码了：\nset global validate_password_policy=0;\nset global validate_password_length=1;\n\n6.但此时还有一个问题，就是因为安装了Yum Repository，以后每次yum操作都会自动更新，需要把这个卸载掉：yum -y remove mysql57-community-release-el7-10.noarch\n\n7.摘自https://www.cnblogs.com/luohanguo/p/9045391.html\n\n## 安装MySQL图形界面\n1.安装SQLyog\n```\n使用SQLyog登录时可能会出现2058错误，这是因为mysql加密方式变了，需要进行以下操作：\nALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '123456';\n```\n\n2.SQLyog注册码（2019）\nttrar\n8d8120df-a5c3-4989-8f47-5afc79c56e7c\n\n\n## 参考\n```\nhttps://www.runoob.com/mysql/mysql-administration.html\n```","tags":["mysql"]},{"title":"定时器的设置和清除","url":"/2019/08/10/定时器的设置和清除/","content":"一、定时器有两种：\n\n1.setTimeout([func], [interval])\n```\n设定一个等待时间[interval]，当到达时间后执行方法[func]，\n当方法执行完成后停止。（定时器还在，只不过没用了）\n```\n\n2.setInterval([func], [interval])\n```\n设定一个等待时间[interval]，每隔[interval]时间就执行方法[func]，\n直到我们手动清除定时器。\n```\n\n二、清除定时器\n\n1.定时器是有返回值的，返回值是一个数字，代表第几个定时器；\n\n2.可以通过clearTimeout和clearInterval清除定时器，参数为设置定时器时的返回值，从技术上来说clearInterval和clearTimeout是可以互用的，不过这样做会造成语义上的歧义，因此并不建议。","tags":["javascript"]},{"title":"mysql优化建议","url":"/2019/08/09/mysql优化建议/","content":"## 1、EXPLAIN\n做MySQL优化，我们要善用EXPLAIN查看SQL执行计划。\n\n* type列，连接类型。一个好的SQL语句至少要达到range级别。杜绝出现all级别\n* key列，使用到的索引名。如果没有选择索引，值是NULL。可以采取强制索引方式。\n* key_len列，索引长度。\n* rows列，扫描行数。该值是个预估值。\n* extra列，详细说明。注意，常见的不太友好的值，如下：Using filesort，Using temporary。\n\n## 2、SQL语句中IN包含的值不应过多\nMySQL对于IN做了相应的优化，即将IN中的常量全部存储在一个数组里面，而且这个数组是排好序的。但是如果数值较多，产生的消耗也是比较大的。再例如：select id from t where num in(1,2,3) 对于连续的数值，能用between就不要用in了；再或者使用连接来替换。\n\n## 3、SELECT语句务必指明字段名称\nSELECT * 增加很多不必要的消耗（CPU、IO、内存、网络带宽）；增加了使用覆盖索引的可能性；当表结构发生改变时，前断也需要更新。所以要求直接在select后面接上字段名。\n\n## 4、当只需要一条数据的时候，使用limit 1\n这是为了使EXPLAIN中type列达到const类型\n\n## 5、如果排序字段没有用到索引，就尽量少排序\n\n## 6、如果限制条件中其他字段没有索引，尽量少用or\nor两边的字段中，如果有一个不是索引字段，而其他条件也不是索引字段，会造成该查询不走索引的情况。很多时候使用union all或者是union（必要的时候）的方式来代替“or”会得到更好的效果。\n\n## 7、尽量用union all代替union\nunion和union all的差异主要是前者需要将结果集合并后再进行唯一性过滤操作，这就会涉及到排序，增加大量的CPU运算，加大资源消耗及延迟。当然，union all的前提条件是两个结果集没有重复数据。\n\n## 8、不使用ORDER BY RAND()\n```\nselect id from `dynamic` order by rand() limit 1000;\n上面的SQL语句，可优化为：\nselect id from `dynamic` t1 join (select rand() * (select max(id) from `dynamic`) as nid) t2 on t1.id > t2.nidlimit 1000;\n```\n\n## 9、区分in和exists、not in和not exists\n```\nselect * from 表A where id in (select id from 表B)\n上面SQL语句相当于：\nselect * from 表A where exists(select * from 表B where 表B.id=表A.id)\n```\n区分in和exists主要是造成了驱动顺序的改变（这是性能变化的关键），如果是exists，那么以外层表为驱动表，先被访问，如果是IN，那么先执行子查询。所以IN适合于外表大而内表小的情况；EXISTS适合于外表小而内表大的情况。\n\n关于not in和not exists，推荐使用not exists，不仅仅是效率问题，not in可能存在逻辑问题。如何高效的写出一个替代not exists的SQL语句？\n\n```\n原SQL语句：\nselect colname … from A表 where a.id not in (select b.id from B表)\n高效的SQL语句：\nselect colname … from A表 Left join B表 on where a.id = b.id where b.id is null\n取出的结果集为A表不在B表中的数据\n```\n\n## 10、使用合理的分页方式以提高分页的效率\n```\nselect id,name from product limit 866613, 20\n使用上述SQL语句做分页的时候，可能有人会发现，随着表数据量的增加，直接使用limit分页查询会越来越慢。\n优化的方法如下：可以取前一页的最大行数的id，然后根据这个最大的id来限制下一页的起点。比如此列中，上一页最大的id是866612。SQL可以采用如下的写法：\nselect id,name from product where id> 866612 limit 20\n```\n\n## 11、分段查询\n在一些用户选择页面中，可能一些用户选择的时间范围过大，造成查询缓慢。主要的原因是扫描行数过多。这个时候可以通过程序，分段进行查询，循环遍历，将结果合并处理进行展示。\n\n## 12、避免在where子句中对字段进行null值判断\n对于null的判断会导致引擎放弃使用索引而进行全表扫描。\n\n## 13、不建议使用%前缀模糊查询\n例如LIKE“%name”或者LIKE“%name%”，这种查询会导致索引失效而进行全表扫描。但是可以使用LIKE “name%”。\n\n虽然给secret字段添加了索引，但在explain结果并没有使用\n\n那么如何解决这个问题呢，答案：使用全文索引。\n\n在我们查询中经常会用到select id,fnum,fdst from dynamic_201606 where user_name like '%zhangsan%'; 。这样的语句，普通索引是无法满足查询需求的。庆幸的是在MySQL中，有全文索引来帮助我们。\n\n```\n创建全文索引的SQL语法是：\nALTER TABLE `dynamic_201606` ADD FULLTEXT INDEX `idx_user_name` (`user_name`);\n使用全文索引的SQL语句是：\nselect id,fnum,fdst from dynamic_201606 where match(user_name) against('zhangsan' in boolean mode);\n注意：在需要创建全文索引之前，请联系DBA确定能否创建。同时需要注意的是查询语句的写法与普通索引的区别。\n```\n\n## 14、避免在where子句中对字段进行表达式操作\n```\n比如：\nselect user_id,user_project from user_base where age*2=36;\n中对字段就行了算术运算，这会造成引擎放弃使用索引，建议改成：\nselect user_id,user_project from user_base where age=36/2;\n```\n\n## 15、避免隐式类型转换\nwhere子句中出现column字段的类型和传入的参数类型不一致的时候发生的类型转换，建议先确定where中的参数类型。\n\n## 16、对于联合索引来说，要遵守最左前缀法则\n举列来说索引含有字段id、name、school，可以直接用id字段，也可以id、name这样的顺序，但是name;school都无法使用这个索引。所以在创建联合索引的时候一定要注意索引字段顺序，常用的查询字段放在最前面。\n\n## 17、必要时可以使用force index来强制查询走某个索引\n有的时候MySQL优化器采取它认为合适的索引来检索SQL语句，但是可能它所采用的索引并不是我们想要的。这时就可以采用forceindex来强制优化器使用我们制定的索引。\n\n## 18、注意范围查询语句\n对于联合索引来说，如果存在范围查询，比如between、>、<等条件时，会造成后面的索引字段失效。\n\n## 19、关于JOIN优化\nEFT JOIN A表为驱动表，INNER JOIN MySQL会自动找出那个数据少的表作用驱动表，RIGHT JOIN B表为驱动表。\n\n```\n注意：\n1）MySQL中没有full join，可以用以下方式来解决：\nselect * from A left join B on B.name = A.namewhere B.name is nullunion allselect * from B;\n2）尽量使用inner join，避免left join：\n参与联合查询的表至少为2张表，一般都存在大小之分。如果连接方式是inner join，在没有其他过滤条件的情况下MySQL会自动选择小表作为驱动表，但是left join在驱动表的选择上遵循的是左边驱动右边的原则，即left join左边的表名为驱动表。\n3）合理利用索引：\n被驱动表的索引字段作为on的限制字段。\n4）利用小表去驱动大表：\n如果能够减少驱动表的话，减少嵌套循环中的循环次数，以减少 IO总量及CPU运算的次数。\n5）巧用STRAIGHT_JOIN：\ninner join是由MySQL选择驱动表，但是有些特殊情况需要选择另个表作为驱动表，比如有group by、order by等「Using filesort」、「Using temporary」时。STRAIGHT_JOIN来强制连接顺序，在STRAIGHT_JOIN左边的表名就是驱动表，右边则是被驱动表。在使用STRAIGHT_JOIN有个前提条件是该查询是内连接，也就是inner join。其他链接不推荐使用STRAIGHT_JOIN，否则可能造成查询结果不准确。\n    SELECT `rl`.`fid`,\n        `rl`.`update_time` as `add_time`,\n        `f`.`fnum`,\n        `f`.`dst_parking`,\n        `f`.`aircraft_num`,\n        `f`.`touch_down_runway`,\n        `f`.`forg`,\n        `f`.`fdst`,\n        `f`.`flight_status_code`,\n        `fd`.`fdst` as `fd_fdst`,\n        `ds`.`touch_down_runway_source`,\n        `ds`.`touch_down_runway_update_time`,\n        `u`.`truename`,\n        `a`.`aircraft_model`\n    FROM `goms_flight_runway_log` as `rl`\n    STRAIGHT_JOIN `goms_flight` as `f` ON `rl`.`fid` = `f`.`fid`\n    LEFT JOIN `goms_aircraft` as `a` ON `f`.`aircraft_num` = `a`.`aircraft_num`\n    LEFT JOIN `goms_flight_link` as `fl` ON `f`.`fid` = `fl`.`arr_fid`\n    LEFT JOIN `goms_flight` as `fd` ON `fl`.`dept_fid` = `fd`.`fid`\n    LEFT JOIN `goms_flight_field_data_source` as `ds` ON `f`.`fid` = `ds`.`fid`\n    LEFT JOIN `goms_user` as `u` ON `ds`.`touch_down_runway_source` = `u`.`uid`\n    WHERE `rl`.`op_type` = 0\n        AND `f`.`fdst` = 'PVG'\n        AND `f`.`fid` != ''\n    GROUP BY `rl`.`fid`\n    ORDER BY `rl`.`update_time` DESC\n    LIMIT 20\n```\n这个方式有时能减少3倍的时间。","tags":["mysql"]},{"title":"mysql中日期相关操作","url":"/2019/08/09/mysql中日期相关操作/","content":"## 字符串和日期相互转换\n```\n字符串转时间：STR_TO_DATE('2017-08-29 00:00:00','%Y-%m-%d %H:%i:%s')\n时间转字符串：DATE_FORMAT(NOW(),'%Y-%m-%d %H:%i:%s')\n各符号代表的意义：\n%W 星期名字(Sunday……Saturday)\n%D 有英语前缀的月份的日期(1st, 2nd, 3rd, 等等。）  \n%Y 年, 数字, 4 位  \n%y 年, 数字, 2 位  \n%a 缩写的星期名字(Sun……Sat)  \n%d 月份中的天数, 数字(00……31)  \n%e 月份中的天数, 数字(0……31)  \n%m 月, 数字(01……12)  \n%c 月, 数字(1……12)  \n%b 缩写的月份名字(Jan……Dec)  \n%j 一年中的天数(001……366)  \n%H 小时(00……23)  \n%k 小时(0……23)  \n%h 小时(01……12)  \n%I 小时(01……12)  \n%l 小时(1……12)  \n%i 分钟, 数字(00……59)  \n%r 时间,12 小时(hh:mm:ss [AP]M)  \n%T 时间,24 小时(hh:mm:ss)  \n%S 秒(00……59)  \n%s 秒(00……59)  \n%p AM或PM  \n%w 一个星期中的天数(0=Sunday ……6=Saturday ）  \n%U 星期(0……52), 这里星期天是星期的第一天  \n%u 星期(0……52), 这里星期一是星期的第一天\n```\n\n## mysql日期加减操作\n1.为日期增加一个时间间隔：DATE_ADD()。\n```\nset @dt = now();\n\nselect date_add(@dt, interval 1 day);        -- add 1 day\nselect date_add(@dt, interval 1 hour);       -- add 1 hour\nselect date_add(@dt, interval 1 minute);     -- ...\nselect date_add(@dt, interval 1 second);\nselect date_add(@dt, interval 1 microsecond);\nselect date_add(@dt, interval 1 week);\nselect date_add(@dt, interval 1 month);\nselect date_add(@dt, interval 1 quarter);\nselect date_add(@dt, interval 1 year);\n\nselect date_add(@dt, interval -1 day);       -- sub 1 day\n```\n\n2.为日期减去一个时间间隔：DATE_SUB()，用法与DATE_ADD()一致。\n\n3.日期、时间相减函数：DATEDIFF(date1, date2)，TIMEDIFF(time1, time2)。\n```\nDATEDIFF(date1, date2)：两个日期相减date1-date2，返回天数。\nTIMEDIFF(time1, time2)：两个时间相减time1-time2，返回time差值。\n\nselect timediff('2008-08-08 08:08:08', '2008-08-08 00:00:00'); -- 08:08:08\nselect timediff('08:08:08', '00:00:00');                       -- 08:08:08\n\n注意：timediff(time1,time2) 函数的两个参数类型必须相同。\n```\n\n## mysql横向展示\n```\nSELECT \n    stu_id,\n    SUM(IF(subject_id=1,score,0)) AS '语文',\n    SUM(IF(subject_id=2,score,0)) AS '数学',\n    SUM(IF(subject_id=3,score,0)) AS '英语'\nFROM \n    `t_score`\nGROUP BY \n    stu_id\n```","tags":["mysql"]},{"title":"学习相关网站","url":"/2019/08/08/学习相关网站/","content":"## 学习网站\n1.[Fiddler抓包工具总结](https://www.cnblogs.com/yyhh/p/5140852.html) --- https://www.cnblogs.com/yyhh/p/5140852.html\n\n2.[MDN学习网站](https://developer.mozilla.org/zh-CN/) --- https://developer.mozilla.org/zh-CN/\n\n3.[LeetCode算法学习网站](https://leetcode-cn.com/) --- https://leetcode-cn.com/\n\n4.[Extjs 教程](https://www.w3cschool.cn/extjs/) --- https://www.w3cschool.cn/extjs/\n\n5.[Elasticsearch: 权威指南](https://www.elastic.co/guide/cn/elasticsearch/guide/current/index.html) --- https://www.elastic.co/guide/cn/elasticsearch/guide/current/index.html\n\n6.[Python菜鸟驿站](https://www.runoob.com/python/python-tutorial.html) --- https://www.runoob.com/python/python-tutorial.html\n\n7.[word模板渲染](http://deepoove.com/poi-tl/) --- http://deepoove.com/poi-tl/\n\n8.[maven官网jar包查询地址](https://search.maven.org/) --- https://search.maven.org/\n\n9.[吾爱破解](https://www.52pojie.cn/portal.php) --- https://www.52pojie.cn/portal.php\n\n10.[GitMind-脑图、思维导图制作](https://gitmind.cn/) --- https://gitmind.cn/\n\n11.[PDF在线转化编辑](https://lightpdf.cn/) --- https://lightpdf.cn/\n\n12.[清华大学开源软件镜像站](https://mirrors.tuna.tsinghua.edu.cn) --- https://mirrors.tuna.tsinghua.edu.cn\n\n13.[Java学习路线](https://www.processon.com/view/link/5c7cf126e4b00bcc4f7982bb#map) --- https://www.processon.com/view/link/5c7cf126e4b00bcc4f7982bb#map\n\n14.[深度学习和围棋游戏](http://livebook.manning.com/book/deep-learning-and-the-game-of-go/) --- http://livebook.manning.com/book/deep-learning-and-the-game-of-go/\n\n15.[红黑联盟](https://www.2cto.com/) --- https://www.2cto.com/\n\n16.[java天堂-各种相关知识点](https://www.javatt.com/) --- https://www.javatt.com/\n\n## 码云\n1.[spring整合工作流](https://gitee.com/shenzhanwang/Spring-activiti) --- https://gitee.com/shenzhanwang/Spring-activiti\n\n2.[若依-springboot+vue前后端分离](https://gitee.com/y_project/RuoYi-Vue/tree/master) --- https://gitee.com/y_project/RuoYi-Vue/tree/master\n\n3.[snaker-web项目](https://github.com/snakerflow/snaker-web) --- https://github.com/snakerflow/snaker-web\n```\n简单、轻巧、灵活的工作流引擎\nhttps://gitee.com/yuqs/snakerflow\n```\n\n## 相关文章\n1.[什么是中台？](https://mp.weixin.qq.com/s/2Wl6fcI2X3UOMMbmtbgN2A) --- https://mp.weixin.qq.com/s/2Wl6fcI2X3UOMMbmtbgN2A\n\n## Android开发\n1.[API文档](https://www.android-doc.com/tools/index.html) --- https://www.android-doc.com/tools/index.html\n\n2.[Android入门基础](http://hukai.me/android-training-course-in-chinese/basics/index.html) --- http://hukai.me/android-training-course-in-chinese/basics/index.html\n\n3.[Android中文社区](http://www.android-studio.org/) --- http://www.android-studio.org/\n\n4.[我要自学网](https://www.51zxw.net/) --- https://www.51zxw.net/\n\n5.[我要自学网-安卓软件开发教程](https://www.51zxw.net/List.aspx?cid=445#!fenye=1) --- https://www.51zxw.net/List.aspx?cid=445#!fenye=1\n\n## 爬虫相关\n1.[selenium+headless chrome爬虫](https://blog.csdn.net/guduyishuai/article/details/78988793) --- 2019-12-23\n\n2.[Python爬虫博客](https://www.cnblogs.com/miqi1992/p/7841599.html) --- https://www.cnblogs.com/miqi1992/p/7841599.html\n\n3.[开篇！我也来谈谈爬虫](http://www.cnblogs.com/pspider/p/7040681.html) --- http://www.cnblogs.com/pspider/p/7040681.html\n\n4.[一些Python爬虫例子](https://github.com/shengqiangzhang/examples-of-web-crawlers) --- 对新手比较友好,主要爬取淘宝、天猫、微信、豆瓣、QQ等网站。\n\n## 前端相关学习网站\n1.[Vue.js](https://cn.vuejs.org/v2/api/) --- https://cn.vuejs.org/v2/api/\n\n2.[ElementUI](https://element.eleme.cn/#/zh-CN/component/message-box) --- https://element.eleme.cn/#/zh-CN/component/message-box\n\n3.[Bootstrap](https://www.bootcss.com/) --- https://www.bootcss.com/\n\n4.[Echarts图表设计](https://echarts.baidu.com/) --- https://echarts.baidu.com/\n\n5.[Layui](https://www.layui.com/) --- https://www.layui.com/\n\n6.[ProcessOn在线绘图](https://www.processon.com/) --- https://www.processon.com/\n\n7.[AxureUX.com交互原型设计](http://www.axureux.com/home/default.html) --- http://www.axureux.com/home/default.html\n\n8.[FusionCharts图表设计](https://www.fusioncharts.com/) --- https://www.fusioncharts.com/\n\n## 大佬博客\n1.[光的传人](http://www.liu16.com/) --- http://www.liu16.com/\n\n2.[前端开发博客](http://caibaojian.com/) --- http://caibaojian.com/\n\n3.[石墨文档-趣味、实用网站合集](https://shimo.im/docs/MGT5VVS87hIantBA/read?tdsourcetag=s_pctim_aiomsg) --- https://shimo.im/docs/MGT5VVS87hIantBA/read?tdsourcetag=s_pctim_aiomsg\n\n4.[大神博客-张鑫旭的个人主页](https://www.zhangxinxu.com/) --- https://www.zhangxinxu.com/\n\n5.[思否](https://segmentfault.com/) --- https://segmentfault.com/\n\n6.[轩枫阁](https://www.xuanfengge.com/) --- https://www.xuanfengge.com/\n\n7.[程序猿DD](http://blog.didispace.com/) --- http://blog.didispace.com/\n\n## 搜索引擎\n1.[Peak Labs](https://www.peak-labs.com/) --- 2019-12-23\n\n## JavaScript学习相关\n1.[ES6-菜鸟教程](https://www.runoob.com/w3cnote/es6-tutorial.html) --- 阅读记录：https://www.runoob.com/w3cnote/es6-map-set.html","tags":["工作"]},{"title":"生活相关网站","url":"/2019/08/08/生活相关网站/","content":"1.[广东政务服务网](http://www.gdzwfw.gov.cn/) --- http://www.gdzwfw.gov.cn/\n\n2.[居住证服务平台](https://szjzz.ga.sz.gov.cn/index) --- https://szjzz.ga.sz.gov.cn/index","tags":["生活"]},{"title":"git的安装和使用","url":"/2019/08/07/git的安装和使用/","content":"# Git的安装\n## 在Window上安装Git\n在Windows上使用Git，可以从Git官网直接[下载安装程序](https://git-scm.com/downloads)，（网速慢的同学请移步国内镜像），然后按默认选项安装即可。\n\n安装完成后，在开始菜单里找到“Git”->“Git Bash”，蹦出一个类似命令行窗口的东西，就说明Git安装成功！\n\n## 在Linux上安装Git\n首先，你可以试着输入git，看看系统有没有安装Git：\n```\n$ git\nThe program 'git' is currently not installed. You can install it by typing:\nsudo apt-get install git\n```\n像上面的命令，有很多Linux会友好地告诉你Git没有安装，还会告诉你如何安装Git。\n\n如果你碰巧用Debian或Ubuntu Linux，通过一条sudo apt-get install git就可以直接完成Git的安装，非常简单。\n\n老一点的Debian或Ubuntu Linux，要把命令改为sudo apt-get install git-core，因为以前有个软件也叫GIT（GNU Interactive Tools），结果Git就只能叫git-core了。由于Git名气实在太大，后来就把GNU Interactive Tools改成gnuit，git-core正式改为git。\n\n如果是其他Linux版本，可以直接通过源码安装。先从[Git官网](https://git-scm.com/downloads)下载源码，然后解压，依次输入：./config，make，sudo make install这几个命令安装就好了。\n\n\n# Git的使用\n## 基础操作\n### 工作区和暂存区的区别\n```\n工作区：就是你在电脑上看到的目录，比如目录下testgit里的文件(.git隐藏目录版本库除外)。或者以后需要再新建的目录文件等等都属于工作区范畴。\n版本库(Repository)：工作区有一个隐藏目录.git,这个不属于工作区，这是版本库。其中版本库里面存了很多东西，其中最重要的就是stage(暂存区)，还有Git为我们自动创建了第一个分支master,以及指向master的一个指针HEAD。\n```\n\n### git init\n```\n创建版本库。版本库又名仓库，英文名repository，你可以简单理解成一个目录，这个目录里面的所有文件都可以被Git管理起来，每个文件的修改、删除，Git都能跟踪，以便任何时刻都可以追踪历史，或者在将来某个时刻可以“还原”。\n首先，选择一个合适的地方，创建一个空目录。\n第二步，通过git init命令把这个目录变成Git可以管理的仓库。\n```\n\n### git add\n```\n把文件添加到暂存区。\n```\n\n### git commit\n```\ngit commit -m \"提交注释\"\n提交更改，实际上就是把暂存区的所有内容提交到当前分支上。\n```\n\n### git status\n```\n查看是否还有文件未提交。\n```\n\n### git diff\n```\n查看待提交文件中有什么修改。\n```\n\n### git log\n```\n显示从最近到最远的提交日志。\n```\n\n### git reset\n```\n版本回退。\n回退到上一个版本：git reset --hard HEAD^\n回退到上上个版本：git reset --hard HEAD^^\n回退到前100个版本：git reset --hard HEAD~100\n直接回退到某个版本，可用git reflog查看过往所有版本：git reset --hard 6fcfc89\n```\n\n### git reflog\n```\n查看过往所有版本记录。\n```\n\n### git checkout -- [filename]\n```\n放弃工作区的修改。\n注意：命令git checkout -- readme.txt 中的 -- 很重要，如果没有 -- 的话，那么命令变成创建分支了。\n```\n\n## 远程仓库\n### 添加远程库\n```\n先有本地库，后有远程库的时候，如何关联远程库。\n可以把一个已有的本地仓库与之关联，然后，把本地仓库的内容推送到GitHub仓库。\n要关联一个远程库，使用命令：git remote add origin git@github.com:[Github账户名]/learngit.git\n```\n\n### 从远程库克隆\n```\n假设我们从零开发，那么最好的方式是先创建远程库，然后，从远程库克隆。\n远程库已经准备好了，下一步是用命令git clone克隆一个本地库：git clone [giturl]\n拉取私有库：git clone [username]:[password]@[giturl]\n```\n\n### git push\n```\n把本地库的内容推送到远程，用git push命令，实际上是把当前分支master推送到远程。\ngit push -u origin master第一次推送master分支的所有内容\n此后，每次本地提交后，只要有必要，就可以使用命令git push origin master推送最新修改\n```\n\n### git pull\n```\n拉取远程仓库最新的文件。\n```\n\n## 分支管理\n### 创建与合并分支\n创建dev分支，然后切换到dev分支\n```\ngit checkout -b dev\n相当于：\ngit branch dev //创建dev分支\ngit checkout dev //切换到dev分支\n```\n查看当前分支\n```\ngit branch //命令会列出所有分支，当前分支前面会标一个*号\n```\n合并分支\n```\ngit merge dev //合并dev分支到当前分支\n```\n删除分支\n```\ngit branch -d dev\n```\n\n### 解决冲突\n当master分支和feature1分支各自都分别有新的提交，这时候必须手动解决冲突，修改之后保存再提交。\n\n# Git Bash不能显示中文\n* 原因\n在默认设置下，中文文件名在工作区状态输出，中文名不能正确显示，而是显示为八进制的字符编码。\n* 解决办法\ngit bash 终端输入命令：\n```\ngit config --global core.quotepath false\n```\n要注意的是，这样设置后，你的git bash终端也要设置成中文和utf-8编码，才能正确显示中文。\n\n在git bash的界面中右击空白处，弹出菜单，选择选项->文本->本地Locale，设置为zh_CN，而旁边的字符集选框选为UTF-8。\n\n英文显示则是： Options->Text->Locale改为zh_CN，Character set改为UTF-8","tags":["git"]},{"title":"linux常用命令","url":"/2019/08/06/linux常用命令/","content":"# 基础命令\n\n## rm-删除文件或目录\n```\nrm -f xxx 删除某个文件\nrm -r xxx 删除某个空的目录\nrm -rf xxx 删除该目录及其下所有文件和目录\n```\n\n## tar(zip)-解压和压缩\n解压\n```\n只介绍常用的几个：\ntar zxvf [filename].tar\ngunzip [filename].gz\ngzip -d [filename].gz\ntar zxvf [filename].tar.gz\nunzip [filename].zip\n```\n\n压缩\n```\ntar czvf [filename].tar [dir]\ntar czvf [filename].tar [dir1] [dir2] [dir3] ... //可压缩多个文件或目录\nzip [filename].zip [dir]\n```\n\n## mv-移动\n```\nmv [options] source dest\n    -i: 若指定目录已有同名文件，则先询问是否覆盖旧文件\n    -f: 在mv操作要覆盖某已有的目标文件时不给任何指示\n```\n\n## cp-复制\n```\ncp [options] source dest\n    -a：此选项通常在复制目录时使用，它保留链接、文件属性，并复制目录下的所有内容。其作用等于dpR参数组合\n    -d：复制时保留链接。这里所说的链接相当于Windows系统中的快捷方式\n    -f：覆盖已经存在的目标文件而不给出提示\n    -i：与-f选项相反，在覆盖目标文件之前给出提示，要求用户确认是否覆盖，回答\"y\"时目标文件将被覆盖\n    -p：除复制文件的内容外，还把修改时间和访问权限也复制到新文件中\n    -r：若给出的源文件是一个目录文件，此时将复制该目录下所有的子目录和文件\n    -l：不复制文件，只是生成链接文件\n```\n\n## less-查询日志\n```\nless [options] filename\n1.全屏导航\n    ctrl + F - 向前移动一屏\n    ctrl + B - 向后移动一屏\n    ctrl + D - 向前移动半屏\n    ctrl + U - 向后移动半屏\n2.单行导航\n    j - 向前移动一行\n    k - 向后移动一行\n3.其它导航\n    G - 移动到最后一行\n    g - 移动到第一行\n    q / ZZ - 退出 less 命令\n```\n\n## ps-查看进程\n```\nps [options]\n    -A 列出所有的行程\n    -w 显示加宽可以显示较多的资讯\n    -au 显示较详细的资讯\n    -aux 显示所有包含其他使用者的行程\n    PID: pid\n    %CPU: 占用的 CPU 使用率\n    %MEM: 占用的记忆体使用率\n    VSZ: 占用的虚拟记忆体大小\n    RSS: 占用的记忆体大小\n```\n\n## systemctl\n<div style=\"width:180px\">任务</div> | <div style=\"width:300px\">指令</div>\n:---: | :---\n启动服务 | systemctl start xxx\n重启服务 | systemctl restart xxx\n停止服务 | systemctl stop xxx\n查看服务状态 | systemctl status xxx\n设置开机自启动 | systemctl enable xxx\n停止开机自启动 | systemctl disable xxx\n查看所有已启动的服务 | systemctl list -units --type=service","tags":["linux"]},{"title":"hexo常用命令","url":"/2019/08/06/hexo常用命令/","content":"## 安装\n```\n首先需要检查是否安装下列程序：Node.js、Git。\nnpm install -g hexo-cli\n```\n\n## init\n```\nhexo init [folder]\n```\n新建一个网站，如果没有设置folder，Hexo默认在当前文件夹建立网站。\n\n## new\n```\nhexo new [layout] <title>\n```\n新建一篇文章。如果没有设置layout，默认使用_config.yml中的default_layout参数代替。如果标题包含空格的话，请使用双引号括起来。\n```\nhexo new \"post title\"\n```\n\n## generate\n```\nhexo generate\n可简写为 hexo g\n```\n生成静态文件。\n\n| 选项 | 描述 |\n| :----: | :----: |\n| -d，--deploy | 文件生成后立即部署网站 |\n| -w，--watch | 监视文件变动 |\n\n## publish\n```\nhexo publish [layout] <filename>\n```\n发表草稿\n\n## server\n```\nhexo server\n可简写为 hexo s\n```\n启动服务器。默认情况下访问地址为http://localhost:4000\n\n选项 | 描述\n:----: | :----:\n-p，--port | 重设端口\n-s，--static | 只使用静态文件\n-l，--log | 启动日记记录，使用覆盖记录格式\n\n## deploy\n```\nhexo deploy\n可简写为 hexo d\n```\n部署网站。\n\n参数 | 描述\n:----: | :----:\n-g，--generate | 部署之前预先生成静态文件\n\n## clean\n```\nhexo clean\n```\n清除缓存文件（db.json）和已生成的静态文件（public）。\n\n**暂时用到的就这些，以后再添加。**","tags":["hexo"]},{"title":".gitignore和.gitmodules的使用","url":"/2019/08/05/gitignore和-gitmodules的使用/","content":"## .gitignore文件的使用\n开发中常遇到不需要跟踪的文件或文件夹，包括不限于编译生成的文件(如.pyc)、调试结果(如rst文件夹)等,原则是不想让其被看到，此时可使用\".gitignore\"文件进行管理。如下所示：\n```\nnode_modules/\npublic/\n.deploy*/\n```\n\n## .gitignore文件的使用\n从git官网上down了个开源代码，在此基础上开发出适合项目需求的程序，如果不想重复的上传别人的代码，此时需要将新添加的程序和改动的程序利用git保存，同时利用\".gitimodules\"指明依赖的程序地址。如下所示：\n```\n[submodule \"themes/aircloud\"]\n    path = themes/aircloud\n    url = https://github.com/aircloud/hexo-theme-aircloud\n```\n子模块使用时可通过以下命令拉取：\n```\ngit submodule update --init\n```","tags":["git"]},{"title":"梦幻完美","url":"/2019/01/01/梦幻完美/","content":"## 梦幻介绍\n### 上线初始\n1.上线二转1级，满级105级。官方味道翻2-3倍。个性复古六职业界面。出生祖龙城西，修真创世技能全满，直接赠送九军装备！\n\n2.参与雪人大作战获得额外九转戒指材料，新手小怪掉落通用流通材料！\n\n3.等级50开启赏金任务，100开启赏善罚恶令，综合任务，称号任务及各种日常都在城西NPC接受！\n\n4.活动鸿利兑换可以利用通用货币兑换各类材料和战灵等，星盘免费直接鸿利袋子购买！\n\n5.新手出生直接领取头顶105级宝箱直接开启家园，消耗物资在鸿利商城全部免费供应含图纸！\n\n6.每日签到领取宝箱钥匙和材料，用于兑换称号和开启日常BOSS遗留的宝藏！\n\n7.称号赏金官开放合成几十种特色称号，拥有属性叠加成效果，满足各类称号迷，并可通过日常合成即可！\n\n8.战魂阶段各类耗材及装备支持回收，交换，不再让物品那么冰冷和单调！\n\n9.独创特种雕刻系统，让你体验无法超越的想象，消耗少许日常材料即可满足各种部位的精雕细琢！\n\n10.出生地就是所有制作和活跃的地方，不再让玩家东奔西跑摸不着头脑，当然您闲逛是可以的！\n\n11.特设立功能便捷官，满足您一切的功能需求，不再染色，精炼还要东传西传，一个集合万般武艺的NPC在您身边！\n\n12.支持仙魔转换，人物改名，帮派改名，整形变性等服务，材料可以通过活动奖励兑换使获得！\n\n13.特色155轻防六职业界面，长久稳定合区，不断改进与更新，活动多多，特色多多，玩法多多，材料多多！\n\n14.采用复古的体验，最新的玩法，最新的装备，最新的材料，让你感受到青春和未知的奥秘！\n\n15.思路玩法简单明了，请玩家上线至出生地溜达一圈即可清楚何去何从，大部分材料和物品皆有来源用途说明！\n\n16.本服采用一库多区合区操作，一个账号通用所有大区无需重复注册，最多拥有16个角色。！\n\n17.禁止一切捣乱行为，恶意利用僵尸号毒杀新手！祖龙城内除出生地皆为非安全区，出门游玩注意飞来横祸。\n\n18.各种老版新版时装，武器，潮男潮女坐骑，均在城西兑换，让爱美的人士，欣赏风景的老骨灰多重体验！\n\n### 群怪地点\n1.新手村-各大主城雪人（掉落：高经验、纪念币、五行）\n\n1.海盗岛-所有怪物（掉落：高经验、纪念币、五行，声望之壁、五行元素精华、荧光果、微光之尘、1-3星龙珠）\n\n### 诛杀BOSS分布\n1.秦陵将军（玉碎滩\t637.878）\n\n1.豪血狼王（破阵平原\t310.893）\n\n1.冥牛之王（龙战之野\t164.648）\n\n2.虎千军（绝龙坡\t312.579）\n\n2.龙千军（绝龙坡\t329.589）\n\n2.狮千军（绝龙坡\t342.580）\n\n3.冥鼠之王（禹王坡\t449.404）\n\n3.冥虎之王（飞鹰堡\t345.567）\n\n3.冥狮之王（摩天涯\t411.521）\n\n4.青牛雷魔王（飞来镇\t122.678）\n\n4.冥猪之王（黑山\t492.323）\n\n4.玄天魔眼（禹王鼎\t438.419）\n\n5.深海巨龙（无极海\t699.975）\n\n5.狂暴铁甲狮王（摩天涯\t416.505）\n\n5.通背猿王（禹王坡\t480.382）\n\n5.万蛇之王（无名岛\t673.677）\n\n5.九辰天蛰（太极滩\t578.984）\n\n6.山猿老妖（暗香坡\t615.618）\n\n6.儒慈（无妄海\t649.346）\n\n6.巡海夜叉（无极海\t701.934）\n\n6.半龙蛟（无妄海\t699.679）\n\n6.龙太子真身（无妄海\t609.313）\n\n6.龙公主真身（无妄海\t609.313）\n\n7.金甲妖（寂寞海\t269.874）\n\n7.岩甲妖（古长城286.814）\n\n7.冰甲妖（刺骨之地\t149.928）\n\n7.炎甲妖（焚心之地\t164.779）\n\n8.幽冥龙王（无妄海\t609.313）\n\n8.昆仑王（通天湖\t432.557）\n\n8.龙王真身（无妄海\t635.306）\n\n9.风沙之王（风沙谷\t181.337）\n\n9.冰雪之王（雪崩山 316.927）\n\n9.熔岩之王（焚心之地\t113.739）\n\n10.深邃（雪崩峡谷\t290.963）\n\n10.谜团（雪崩峡谷\t314.957）\n\n10.鬼侍（沐火村\t170.758）\n\n10.锥心（离离草原\t252.755）\n\n11.天蝇战士（信风镇\t439.749）\n\n11.蜈蚣终结者（玉碎滩\t637.868）\n\n11.剑魂不动（通天湖\t472.568）\n\n11.阿普盾（埋骨之地\t152.340）\n\n### 赏善罚恶令BOSS分布\n1.镇魂（坐标:578.984）\n\n2.吞噬者（坐标:578.984）\n\n3.搜魂人（坐标:122.678）\n\n4.阿尔法（坐标:160.428）\n\n5.暗影（坐标:660.524）\n\n6.金角大王（坐标:653.392）\n\n7.刀魔（坐标:432.472）\n\n8.斧神·灼弑（坐标:430.382）\n\n9.地狱魔犬（坐标:673.677）\n\n10.骷髅王（坐标:578.984）\n\n### 野外BOSS掉落\n1.赤金元素使（30分钟刷新，坐标:688.495）掉落：金元素精华10-30个\n\n2.巨木元素使（30分钟刷新，坐标:363.894）掉落：木元素精华10-30个\n\n3.洪水元素使（30分钟刷新，坐标:470.285）掉落：水元素精华10-30个\n\n4.炽火元素使（30分钟刷新，坐标:130.782）掉落：火元素精华10-30个\n\n5.沃土元素使（30分钟刷新，坐标:130.416）掉落：土元素精华10-30个\n\n### 《显道神 百将的囚禁》\n1.当玩家达到100级后，持有赤金钎五种对应五个守护柱子，集合五行的力量进入到\n\n城西门口区域自动触发《显道神 百将的囚禁》，每个守护柱子都有一种免疫，需\n\n配合各种不同的属性力量将其击杀并打开封印，随机刷新出来封印的五行宝箱，\n\n持有各类赤金钎进行解封，获取丰厚奖励，并有机会释放《显道神 百将》，将其\n\n击杀获取更多奖励。--可无限循环完成，必须持有需材方可解封。\n\n### 随意城战系统\n1.在线人数达到100人，远程城战系统自动开启！\n\n2.系统12点开始标地，20点结束标地，20点30分开始攻城，22点准时发放奖励！\n\n3.一级城池奖励10000元宝，二级城池5000元宝，三级城池奖励2000元宝！（每周）\n\n4.一级城池奖励10000纪念币，二级城池5000纪念币，三级城池奖励2000纪念币！（每日）\n\n5.一级城池奖励100雕刻礼包，二级城池50雕刻礼包，三级城池奖励20雕刻礼包！（每日）\n\n### 副本场景\n\n蜂巢密室\n奖励：风之精魄\n制作：战魂套\n\n神月谷\n掉落：未开放\n制作：战魂套\n\n仙幻天\n掉落：未开放\n制作：战魂套\n\n魔幻天\n掉落：未开放\n制作：战歌腰佩\n\n天界炼狱\n掉落：未开放\n制作：战魂套\n\n魔域桃源\n掉落：未开放\n制作：战魂套\n任务线路\n\n每日诛杀令（50级）\n获得：寂照犀变、睟境神丹·钧天、封印之符、封印之石、夏风令剑、荣耀勋章\n战歌腰佩·铭文、军资通宝、神音灵媒、转动的魔方齿轮、怨灵统帅印记、声望\n\n赏善罚恶令（100级）\n获得：幻彩龙珠、睟境神丹·钧天、寂照犀变、君之印绶\n灵魂石、神音灵媒、玄铁精金、魔法晶石、纪念币、声望\n\n赏金猎人之命运（100级）\n获得：纪念币、睟境神丹·钧天、风之精魄、君之印绶、玄铁精金\n魔法晶石、灵魂石、神音灵媒、命运结晶宝藏、声望\n\n显道神的囚禁（100级）\n获得：赤五行结晶、五星辰、五战魂、流霞醉、睟境神丹·钧天\n显道神百将随机掉落（命运结晶宝藏、命运星辰宝藏、命运战魂宝藏）\n\n五行汇聚之力（100级）\n获得：寂照犀变、睟境神丹·钧天、魔法晶石、灵魂石、神音灵媒\n声望、七彩幻晶、稀有火焰、灵动结晶、五行宝箱、纪念币\n\n环游世界自由天地（100级，注意环游期间死亡将失败）\n获得：血灵石、金瓴铁、碧穹玉、纯净的灵魂、魔神残骨\n渎神木、天玄骨、八觉髓、五威将令、纪念币\n装备升级\n\n九军套\n等级：1-90级\n合成：上线领取\n\n九军强\n等级：90-100级\n合成：九军锻造炉\n\n战魂套\n等级：100-110级\n合成：战魂套制作\n\n进阶套\n等级：110-120级\n合成：战魂套进阶\n\n凌云器\n等级：100-120级\n合成：聚宝金盆\n活动日期\n\n祖龙宝藏\n时间：每周五/七20点-20点30分\n要求：玩家等级《80》\n规则：每周五和周日活动提前10分钟世界公告系统，玩家请集合祖龙城参与活动，届时刷新随机分布无数个宝藏在祖龙城内，玩家通过要求条件即可挖生长在祖龙城内的宝藏，随机活动奖励物品时间只有半个小时，时间到了直接消失结束活动。\n\n## 铸材兑换\n```\n九霄·血灵石 200纪念币——50\n九霄·金翎铁 250纪念币——50\n九霄·碧琼玉 500纪念币——20\n凌墟·渎神木 200纪念币——2\n凌墟·天玄骨 1000纪念币——1\n```\n\n## 装备\n1.517武器\n```\n九霄·血灵石 1000\n九霄·金翎铁 800\n九霄·碧琼玉 300\n凌墟·渎神木 80\n凌墟·天玄骨 30\n凌墟·八觉髓 8\n总共需要4000+4000+7500+8000+30000=53500\n```\n\n2.517武器【强化】\n```\n九霄·血灵石 1200\n九霄·金翎铁 1000\n九霄·碧琼玉 350\n凌墟·渎神木 100\n凌墟·天玄骨 35\n凌墟·八觉髓 10\n五威将令 500\n```","tags":["游戏"]},{"title":"简单完美","url":"/2018/08/09/简单完美/","content":"\n## 龙珠合成公式\n```\n低级龙珠合成到高级的公式：\n2星＝1星×4＝4个1星龙珠\n3星＝2星×2＋1星×2＝10个1星龙珠\n4星＝3星×2＋1星×1＋2星×1＝25个1星龙珠\n5星＝4星×2＋3星×1＝60个1星龙珠\n6星＝5星×2＋3星×1＝130个1星龙珠\n7星＝4星×1＋5星×1＋6星×1＝215个1星龙珠\n8星＝5星×1＋6星×1＋7星×1＝405个1星龙珠\n9星＝6星×1＋7星×1＋8星×1＝750个1星龙珠\n10星＝7星×1＋8星×1＋9星×1＝1370个1星龙珠\n11星＝8星×1＋9星×1＋10星×1＝2525个1星龙珠\n12星＝9星×1＋10星×1＋11星×1＝4645个1星龙珠\n```\n\n## 黄昏BOSS位置\n<div style=\"width:100px\">名称</div> | <div style=\"width:100px\">位置</div> | 掉落\n:---: | :---: | :---:\n秦天·空 | 121 676 | 秦天的铠片\n鼓神·空 | 122 681 | 完整的鼓\n荡魂使·空 | 130 684 | 魂使的触手\n古蛇·空 | 133 693 | 古蛇的皮、古蛇精魄\n圣金甲·空 | 134 700 | 破碎的金甲片\n秦天·斗 | 140 703 | 秦天的坚甲\n鼓神·斗 | 149 700 | 坚韧的巨鼓\n古蛇·斗 | 147 688 | 古蛇的血、古蛇精魄\n荡魂使·斗 | 147 694 | 魂使的金镜\n噬灵狂兽·斗 | 145 657 | 噬灵兽的爪\n巨力·斗 | 142 658 | 巨猿的牙齿、巨猿的刺掌\n圣金甲·斗 | 141 685 | 坚固的金甲片、金甲之灵\n大将风无痕·斗 | 142 665 | 风无痕的黑甲、风无痕的钢甲\n震军·斗 | 145 679 | 狂狮的甲皮\n大将神武罗·斗 | 144 674 | 神武罗的甲胄、神武罗的黑珠\n噬灵狂兽·破 | 147 694 | 噬灵兽的鬃毛\n巨力·破 | 149 687 | 巨猿的甲皮\n七曜使灵·破 | 148 702 | 星辰之粉、七曜之触\n大将风无痕·破 | 148 678 | 风无痕的钢架、风无痕的钢甲\n震军·破 | 147 661 | 狂狮的尖爪\n大将神武罗·破 | 149 673 | 神武罗的尖钩\n神武罗·虚 | 122 703 | 神武罗的残臂\n噬灵狂兽·虚 | 95 705 | 噬灵兽的钢须\n七曜使灵·虚 | 94 697 | 七曜之轮、星辰之石、七曜使灵之力\n巨力·虚 | 103 703 | 巨猿的尖尾、巨猿的刺掌\n大将风无痕·虚 | 112 700 | 风无痕的战马长角\n震军·虚 | 129 705 | 狂狮的利刃\n囚坚·虚 | 99 681 | 黑暗的铁甲\n鬼啸·虚 | 99 671 | 鬼奴长角、鬼奴的外壳\n紫鳞·虚 | 100 661 | 魔女之手\n铁罗云·虚 | 105 646 | 鬼王的缎带\n幻灵圣母·虚 | 100 649 | 圣母的宝珠、圣母的光环\n黑甲巨兽·虚 | 109 641 | 巨兽的坚甲、巨兽的精壳\n囚坚·无 | 139 691 | 黑暗的鳞片\n鬼啸·无 | 109 627 | 鬼奴的斧刃\n紫鳞·无 | 118 619 | 魔女的电气、魔女的精魄\n铁罗云·无 | 129 628 | 鬼王之力\n幻灵圣母·无 | 123 623 | 圣母的灵石\n黑甲巨兽·无 | 136 632 | 巨兽的黑气\n黄昏王苍力·无 | 155 647 | 王朝的背影、苍力的刀刃、苍力的宝珠\n黄昏相子纯·无 | 165 649 | 大臣的印记、子纯的幽灵之面、子纯的黑暗之魂\n囚坚·灭 | 180 653 | 黑暗的巨钳\n鬼啸·灭 | 192 665 | 鬼奴的烈焰之心\n紫鳞·灭 | 193 674 | 魔女的头冠\n铁罗云·灭 | 164 680 | 鬼王的金丝绳、鬼王的护身罩\n幻灵圣母·灭 | 181 678 | 圣母之心\n黄昏王苍力·灭 | 163 695 | 王者的斗气、王朝的叹息\n黄昏相子纯·灭 | 178 700 | 子纯的丝鞭、子纯的光翼\n黑甲巨兽·灭 | 156 684 | 巨兽的真红之角、巨兽的脚掌\n上古恶魔·十方俱灭 | 98 691 | 上古恶魔之角、恶魔之尘、上古恶魔之魂\n幻境之主·天地无用 | 135 675 | 幻境之泉、黄金面具、天地灵心、黄昏权杖、幻境之石、幻境之主的印记\n\n## 飞龙翔击双虎掌\n```\n第一步：\n鼓力拳套4副\n所需材料：碎裂的鼓5（流字结尾的黄昏boss） + 亡骨之片10\n\n第二步：\n天武拳套4副\n所需材料：魂使的触手5（130 684） + 谜之头骨10 + 剑魂·鼓力拳套1\n\n第三步：\n1.魂使拳套2副\n所需材料：巨猿的牙齿8（142 658） + 魂使的金镜8（147 694） + 古旧残剑16 + 剑魂·天武拳套1\n2.佛陀拳套2副\n所需材料：噬灵兽的爪8（145 657） + 坚韧的巨鼓8（149 700） + 古旧残剑16 + 剑魂·天武拳套1\n\n第四步：\n1.狂神拳套2副\n所需材料：恶魔之尘8（98 691） + 神武罗的残臂8（122 703） + 圣殿之石16 + 剑魂·魂使拳套1\n2.巨兽拳套2副\n所需材料：鬼王的缎带8（105 646） + 巨兽的坚甲8（109 641） + 圣殿之石16 + 剑魂·佛陀拳套1\n\n第五步：\n1.黑暗魔力拳套1副\n所需材料：大臣的印记8（165 649） + 魔女的头冠8（193 674） + 黄昏印记16 + 剑魂·巨兽拳套1\n2.凶灵拳套1副\n所需材料：圣母之心8（181 678） + 鬼王之力8（129 628） + 黄昏印记16 + 剑魂·巨兽拳套1\n3.圣灵拳套1副\n所需材料：巨兽的黑气8（136 632） + 圣母的灵石8（123 623） + 黄昏印记16 + 剑魂·狂神拳套1\n4.鬼面拳套1副\n所需材料：大臣的印记8（165 649） + 黑暗的巨钳8（180 653） + 黄昏印记16 + 剑魂·狂神拳套1\n\n第六步：\n1.飞龙翔击双虎掌\n所需材料：天地灵心1（135 675） + 剑魂·黑暗魔力拳套1 + 剑魂·凶灵拳套1 + 剑魂·圣灵拳套1 + 剑魂·鬼面拳套1\n```","tags":["游戏"]},{"title":"游戏相关网站","url":"/2018/08/08/游戏相关网站/","tags":["游戏"]}]